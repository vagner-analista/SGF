<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>SGF</processId>
    </processDefinitionPK>
    <processDescription>Contratação SGF</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Dev.GAO</categoryId>
    <managerEngineAllocationId>Grupo</managerEngineAllocationId>
    <managerEngineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</managerEngineAllocationConfiguration>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Contratação SGF</processId>
      <version>432</version>
    </processDefinitionVersionPK>
    <versionDescription>Nova Versão.</versionDescription>
    <formId>1712</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>true</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>6</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>70</positionX>
      <positionY>164</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>7</sequence>
      </processStatePK>
      <stateName>Aprovação do Gerente</stateName>
      <stateDescription>Aprovação do Gerente</stateDescription>
      <instruction>Coordenador da área demandante, analisar e decidir se aprova ou não, a solicitação! (DISPARAR E-MAIL QUANDO NÃO FOR O GESTOR DO PROJETO)</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;matriculaGestor&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>160</positionX>
      <positionY>790</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>11</sequence>
      </processStatePK>
      <stateName>Ajustar Solicitação</stateName>
      <stateDescription>Ajustar Solicitação</stateDescription>
      <instruction>Solicitante deverá ajustar os dados da contratação, conforme solicitação recebida.</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1140</positionX>
      <positionY>147</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>15</sequence>
      </processStatePK>
      <stateName>Analisar Contratação SEBRAETEC</stateName>
      <stateDescription>Analisar Contratação SEBRAETEC</stateDescription>
      <instruction>Gestor do recurso SEBRAETEC analisa e decide se aprova ou não a contratação.</instruction>
      <deadlineTime>60</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;gestor_sebraetec&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>670</positionX>
      <positionY>931</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>17</sequence>
      </processStatePK>
      <stateName>Aprovar Contratação Direx</stateName>
      <stateDescription>Aprovar Contratação Direx</stateDescription>
      <instruction>A Diretoria Executiva analisa a contratação e decide se aprova ou não a contratação.</instruction>
      <deadlineTime>57600</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;idDiretor&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>950</positionX>
      <positionY>1476</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>21</sequence>
      </processStatePK>
      <stateName>Analisar Solicitação SGF</stateName>
      <stateDescription>Analisar Solicitação SGF</stateDescription>
      <instruction>Gestores do SGF analisam e decide se aprova ou não a contratação.</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>610</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>58</sequence>
      </processStatePK>
      <stateName>Gerência SGF Aprova Contratação</stateName>
      <stateDescription>Gerência SGF Aprova Contratação</stateDescription>
      <instruction>Gerente do Setor analisam todas as solicitações e decide se aprova ou não.</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;gerente_financeiro&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1160</positionX>
      <positionY>1714</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>86</sequence>
      </processStatePK>
      <stateName>Gravar Dados RM</stateName>
      <stateDescription>Gravar Dados RM</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;gp_CentralDeServicos&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3710</positionX>
      <positionY>1990</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>101</sequence>
      </processStatePK>
      <stateName>Integrar RM SGF</stateName>
      <stateDescription>Integrar RM SGF</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4070</positionX>
      <positionY>1990</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>103</sequence>
      </processStatePK>
      <stateName>Tratar Integração</stateName>
      <stateDescription>Tratar Integração</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;gp_CentralDeServicos&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4070</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>113</sequence>
      </processStatePK>
      <stateName>Aprovar Fiscal Contrato</stateName>
      <stateDescription>Aprovar Fiscal Contrato</stateDescription>
      <instruction>Fiscal da área demandante, analisar e decidir se aprova ou não, a solicitação!</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>true</joint>
      <agreementPercentage>100</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;matriculas_aprovacao_fiscal&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>2</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>260</positionX>
      <positionY>372</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>144</sequence>
      </processStatePK>
      <stateName>Analisar Contratação TIC</stateName>
      <stateDescription>Analisar Contratação TIC</stateDescription>
      <instruction>Gestor da TIC analisa e decide se aprova ou não a contratação.</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Gestores_TIC&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>400</positionX>
      <positionY>1111</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>154</sequence>
      </processStatePK>
      <stateName>Completar cadastro iniciado no Xperts</stateName>
      <stateDescription>Completar cadastro iniciado no Xperts</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GestorConsultoria&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>390</positionX>
      <positionY>133</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>157</sequence>
      </processStatePK>
      <stateName>Contratação SGF</stateName>
      <stateDescription>Contratação SGF</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2140</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>161</sequence>
      </processStatePK>
      <stateName>Tratar Integração ou Lançar Manualmente</stateName>
      <stateDescription>Tratar Integração ou Lançar Manualmente</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2140</positionX>
      <positionY>1970</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>193</sequence>
      </processStatePK>
      <stateName>Confirmação do Serviço</stateName>
      <stateDescription>Confirmação do Serviço</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1590</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>198</sequence>
      </processStatePK>
      <stateName>Aguardando assinatura do contrato</stateName>
      <stateDescription>Aguardando assinatura do contrato</stateDescription>
      <instruction>Usuário confirma / assinatura do contrato</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3540</positionX>
      <positionY>1714</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>211</sequence>
      </processStatePK>
      <stateName>Anexar Ata de Reunião de Alinhamento</stateName>
      <stateDescription>Anexar Ata de Reunião de Alinhamento</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1770</positionX>
      <positionY>140</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>281</sequence>
      </processStatePK>
      <stateName>Credenciado Contratação</stateName>
      <stateDescription>Credenciado Contratação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3050</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>285</sequence>
      </processStatePK>
      <stateName>Tratar Integração Credenciado</stateName>
      <stateDescription>Tratar Integração Credenciado</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3040</positionX>
      <positionY>1930</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>290</sequence>
      </processStatePK>
      <stateName>Enviar Aprovação</stateName>
      <stateDescription>Enviar Aprovação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2510</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>294</sequence>
      </processStatePK>
      <stateName>Tratar Integração Aprovação</stateName>
      <stateDescription>Tratar Integração Aprovação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2510</positionX>
      <positionY>1940</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>297</sequence>
      </processStatePK>
      <stateName>Aprovar Contratação</stateName>
      <stateDescription>Aprovar Contratação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2770</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>300</sequence>
      </processStatePK>
      <stateName>Tratar Integração Aprovar</stateName>
      <stateDescription>Tratar Integração Aprovar</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;GerenciaSGF&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2770</positionX>
      <positionY>1940</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>312</sequence>
      </processStatePK>
      <stateName>Aprovação Gerente Regional</stateName>
      <stateDescription>Aprovação Gerente Regional</stateDescription>
      <instruction>Gerente Regional da área demandante, analisar e decidir se aprova ou não, a solicitação!</instruction>
      <deadlineTime>43200</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;idGerenteRegional&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>160</positionX>
      <positionY>670</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>322</sequence>
      </processStatePK>
      <stateName>Parecer Assessor / Gerente Estadual</stateName>
      <stateDescription>Parecer Assessor / Gerente Estadual</stateDescription>
      <instruction>Gerente estadual da área demandante, analisar e decidir se aprova ou não, a solicitação!</instruction>
      <deadlineTime>43200</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1050</positionX>
      <positionY>1278</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>348</sequence>
      </processStatePK>
      <stateName>Validação do Coordenador</stateName>
      <stateDescription>Validação do Coordenador</stateDescription>
      <instruction></instruction>
      <deadlineTime>21600</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;idCoordenador&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>170</positionX>
      <positionY>525</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>102</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4146</positionX>
      <positionY>2004</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>101</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>139</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4280</positionX>
      <positionY>1766</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>141</sequence>
      </processStatePK>
      <stateName>Recebimento de Link - Ajustar Solicitação </stateName>
      <stateDescription>Recebimento de Link - Ajustar Solicitação </stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1280</positionX>
      <positionY>164</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>146</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>780</positionX>
      <positionY>1135</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>159</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2180</positionX>
      <positionY>1766</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>157</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>207</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3580</positionX>
      <positionY>1636</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>209</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4240</positionX>
      <positionY>1646</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>216</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1650</positionX>
      <positionY>164</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>218</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4270</positionX>
      <positionY>2010</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>220</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1950</positionX>
      <positionY>164</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>222</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4360</positionX>
      <positionY>1826</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>224</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4260</positionX>
      <positionY>1721</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>227</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2180</positionX>
      <positionY>1640</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>229</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>250</positionX>
      <positionY>70</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>246</sequence>
      </processStatePK>
      <stateName>Envio de Lik - Ajustar Solicitação</stateName>
      <stateDescription>Envio de Lik - Ajustar Solicitação</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>870</positionX>
      <positionY>680</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>248</sequence>
      </processStatePK>
      <stateName>Envio de Link - Ajustar Solicitação</stateName>
      <stateDescription>Envio de Link - Ajustar Solicitação</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>530</positionX>
      <positionY>389</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>251</sequence>
      </processStatePK>
      <stateName>Link Envio - Análise TIC</stateName>
      <stateDescription>Link Envio - Análise TIC</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>870</positionX>
      <positionY>630</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>253</sequence>
      </processStatePK>
      <stateName>Link Recebimento - Contratação TIC</stateName>
      <stateDescription>Link Recebimento - Contratação TIC</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>290</positionX>
      <positionY>1135</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>255</sequence>
      </processStatePK>
      <stateName>Análise SGF</stateName>
      <stateDescription>Análise SGF</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>480</positionX>
      <positionY>1738</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>257</sequence>
      </processStatePK>
      <stateName>Link Envio - SGF</stateName>
      <stateDescription>Link Envio - SGF</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>870</positionX>
      <positionY>730</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>259</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>980</positionX>
      <positionY>910</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>261</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>800</positionX>
      <positionY>1800</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>263</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3677</positionX>
      <positionY>1645</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>265</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1480</positionX>
      <positionY>1620</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>269</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>980</positionX>
      <positionY>1000</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>276</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3450</positionX>
      <positionY>2040</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>278</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3460</positionX>
      <positionY>1986</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>284</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3127</positionX>
      <positionY>1776</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>281</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>293</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2586</positionX>
      <positionY>1766</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>290</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>303</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2846</positionX>
      <positionY>1776</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>297</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>308</sequence>
      </processStatePK>
      <stateName>Intermediario</stateName>
      <stateDescription>Intermediario</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>2380</positionX>
      <positionY>1650</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>310</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1510</positionX>
      <positionY>1670</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>330</sequence>
      </processStatePK>
      <stateName>LINK RECEBIMENTO - GERENTE DEMANDANTE</stateName>
      <stateDescription>LINK RECEBIMENTO - GERENTE DEMANDANTE</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>80</positionX>
      <positionY>800</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>42</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>332</sequence>
      </processStatePK>
      <stateName>Link de Envio - Gerante Demandante</stateName>
      <stateDescription>Link de Envio - Gerante Demandante</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>170</positionX>
      <positionY>70</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>335</sequence>
      </processStatePK>
      <stateName>LINK ENVIO - GERENTE DEMANDANTE</stateName>
      <stateDescription>LINK ENVIO - GERENTE DEMANDANTE</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>520</positionX>
      <positionY>350</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>346</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>520</positionX>
      <positionY>500</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>36</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>0</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>9</sequence>
      </processStatePK>
      <stateName>Aprova / Valida?</stateName>
      <stateDescription>Aprova / Valida?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>690</positionX>
      <positionY>660</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>18</sequence>
      </processStatePK>
      <stateName>Aprova?</stateName>
      <stateDescription>Aprova?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>860</positionX>
      <positionY>929</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>23</sequence>
      </processStatePK>
      <stateName>Aprova contratação?</stateName>
      <stateDescription>Aprova contratação?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1180</positionX>
      <positionY>1460</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>27</sequence>
      </processStatePK>
      <stateName>Aprova contratação</stateName>
      <stateDescription>Aprova contratação</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>870</positionX>
      <positionY>1698</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>67</sequence>
      </processStatePK>
      <stateName>Exportar Dados ao SGF</stateName>
      <stateDescription>Exportar Dados ao SGF</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1390</positionX>
      <positionY>1698</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>77</sequence>
      </processStatePK>
      <stateName>Gerado Contratacao</stateName>
      <stateDescription>Gerado Contratacao</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>3740</positionX>
      <positionY>1698</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>115</sequence>
      </processStatePK>
      <stateName>Aprova?</stateName>
      <stateDescription>Aprova?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>420</positionX>
      <positionY>363</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>132</sequence>
      </processStatePK>
      <stateName>Aprov Fiscal?</stateName>
      <stateDescription>Aprov Fiscal?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>190</positionX>
      <positionY>131</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>148</sequence>
      </processStatePK>
      <stateName>Aprova?</stateName>
      <stateDescription>Aprova?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>630</positionX>
      <positionY>1109</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>202</sequence>
      </processStatePK>
      <stateName>Confirma</stateName>
      <stateDescription>Confirma</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>1790</positionX>
      <positionY>1712</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>271</sequence>
      </processStatePK>
      <stateName>Exclusivo</stateName>
      <stateDescription>Exclusivo</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>3300</positionX>
      <positionY>1960</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>305</sequence>
      </processStatePK>
      <stateName>Avançar</stateName>
      <stateDescription>Avançar</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>2300</positionX>
      <positionY>1712</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>315</sequence>
      </processStatePK>
      <stateName>Aprova / Valida?</stateName>
      <stateDescription>Aprova / Valida?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>400</positionX>
      <positionY>509</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>13</sequence>
      </processStatePK>
      <stateName>Fim Gerente</stateName>
      <stateDescription>Fim Gerente</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>870</positionX>
      <positionY>770</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>56</sequence>
      </processStatePK>
      <stateName>End</stateName>
      <stateDescription>End</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1330</positionX>
      <positionY>1500</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>73</sequence>
      </processStatePK>
      <stateName>End</stateName>
      <stateDescription>End</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1630</positionX>
      <positionY>1810</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>81</sequence>
      </processStatePK>
      <stateName>End</stateName>
      <stateDescription>End</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3867</positionX>
      <positionY>1742</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>88</sequence>
      </processStatePK>
      <stateName>End</stateName>
      <stateDescription>End</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>4250</positionX>
      <positionY>1826</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>122</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>520</positionX>
      <positionY>430</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>274</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>3450</positionX>
      <positionY>1930</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>318</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>520</positionX>
      <positionY>570</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot; &amp;&amp;  hAPI.getCardValue(&quot;aprovaGerenteRegional&quot;) == &quot;sim&quot;  &amp;&amp; hAPI.getCardValue(&quot;txt_fluxo&quot; == &quot;analisesgf&quot;</condition>
      <destinationSequenceId>257</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot;  &amp;&amp;  hAPI.getCardValue(&quot;aprovaGerenteRegional&quot;) == &quot;sim&quot;  &amp;&amp; hAPI.getCardValue(&quot;txt_fluxo&quot;) == &quot;analiseTIC&quot;</condition>
      <destinationSequenceId>251</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot;  &amp;&amp;  hAPI.getCardValue(&quot;aprovaGerenteRegional&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>15</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot;  &amp;&amp;  hAPI.getCardValue(&quot;aprovaGerenteRegional&quot;) == &quot;ajustar&quot;</condition>
      <destinationSequenceId>246</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>5</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot;  &amp;&amp;  hAPI.getCardValue(&quot;aprovaGerenteRegional&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>13</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>6</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;)== &quot;ajuste&quot; &amp;&amp; &#xd;
hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;</condition>
      <destinationSequenceId>246</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>7</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;)== &quot;ajuste&quot; &amp;&amp; &#xd;
hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;</condition>
      <destinationSequenceId>246</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;193&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>8</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;) == &quot;analisesebraetec&quot;</condition>
      <destinationSequenceId>15</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>9</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;) == &quot;analisesgf&quot;</condition>
      <destinationSequenceId>257</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>10</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;) == &quot;fim&quot;</condition>
      <destinationSequenceId>13</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>11</expressionOrder>
        <version>432</version>
        <sequence>9</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxo&quot;) == &quot;analiseTIC&quot;</condition>
      <destinationSequenceId>251</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxosebraetec&quot;) == &quot;analisesgf&quot;&#xd;
</condition>
      <destinationSequenceId>269</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxosebraetec&quot;) == &quot;analiseTIC&quot;</condition>
      <destinationSequenceId>144</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxosebraetec&quot;)== &quot;ajustesebraetec&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>259</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxosebraetec&quot;)== &quot;ajustesebraetec&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;)</condition>
      <destinationSequenceId>259</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;154&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>23</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxodirex&quot;) == &quot;parecerdirex&quot;</condition>
      <destinationSequenceId>322</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>23</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxodirex&quot;)== &quot;ajustardirex&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>11</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>23</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxodirex&quot;)== &quot;ajustardirex&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;)</condition>
      <destinationSequenceId>11</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;154&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>23</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxodirex&quot;) == &quot;contratardirex&quot;</condition>
      <destinationSequenceId>58</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>5</expressionOrder>
        <version>432</version>
        <sequence>23</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovadirex&quot;) == &quot;naodirex&quot;</condition>
      <destinationSequenceId>56</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxosgf&quot;) == &quot;analisardirex&quot;</condition>
      <destinationSequenceId>17</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxosgf&quot;)==&quot;contratarsgf&quot;</condition>
      <destinationSequenceId>58</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxosgf&quot;)== &quot;ajustarsgf&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>261</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;txt_fluxosgf&quot;)== &quot;ajustarsgf&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;)</condition>
      <destinationSequenceId>261</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;154&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>67</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_financa&quot;) == &quot;aprovadonao&quot; || hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;cancelado&quot;</condition>
      <destinationSequenceId>73</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>67</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_financa&quot;)== &quot;ajuste&quot; || hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;ajuste&quot;</condition>
      <destinationSequenceId>265</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>67</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_financa&quot;) == &quot;aprovadosim&quot; &amp;&amp; hAPI.getCardValue(&quot;cnpjSolicitante&quot;) == &quot;&quot;</condition>
      <destinationSequenceId>310</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>67</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_financa&quot;) == &quot;aprovadosim&quot; &amp;&amp; hAPI.getCardValue(&quot;cnpjSolicitante&quot;) != &quot;&quot;</condition>
      <destinationSequenceId>193</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>77</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;) == &quot;cancelado&quot;</condition>
      <destinationSequenceId>81</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>77</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;ajuste&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>263</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>77</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;ajuste&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;)</condition>
      <destinationSequenceId>263</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;154&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>77</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;) == &quot;gravarRM&quot;</condition>
      <destinationSequenceId>86</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>115</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovafiscal&quot;)== &quot;sim&quot; &amp;&amp; (hAPI.getCardValue(&quot;localidade&quot;) == &quot;SEDE&quot; )</condition>
      <destinationSequenceId>335</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>115</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovafiscal&quot;)== &quot;sim&quot; &amp;&amp; (hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot; )</condition>
      <destinationSequenceId>348</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>115</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;aprovafiscal&quot;)== &quot;ajuste&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>248</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>115</sequence>
      </conditionProcessStatePK>
      <condition>(hAPI.getCardValue(&quot;aprovafiscal&quot;)== &quot;ajuste&quot; &amp;&amp; hAPI.getCardValue(&quot;solicitacaoXperts&quot;) == &quot;1&quot;)</condition>
      <destinationSequenceId>248</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;154&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>5</expressionOrder>
        <version>432</version>
        <sequence>115</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovafiscal&quot;)== &quot;nao&quot;</condition>
      <destinationSequenceId>122</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>132</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;chkTermoResponsabilidade&quot;) == &quot;&quot; || hAPI.getCardValue(&quot;periodoinicial&quot;) == &quot;&quot;  &#xd;
|| hAPI.getCardValue(&quot;periodofinal&quot;) == &quot;&quot; </condition>
      <destinationSequenceId>154</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>132</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;envia_aprovacao_fiscal&quot;) == &quot;sim&quot;</condition>
      <destinationSequenceId>113</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>132</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;envia_aprovacao_fiscal&quot;) == &quot;não&quot; &amp;&amp; hAPI.getCardValue(&quot;localidade&quot;) == &quot;SEDE&quot; </condition>
      <destinationSequenceId>332</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>132</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;envia_aprovacao_fiscal&quot;) == &quot;não&quot; &amp;&amp; hAPI.getCardValue(&quot;localidade&quot;) == &quot;INTERIOR&quot; </condition>
      <destinationSequenceId>348</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>148</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;txt_fluxoTIC&quot;) == &quot;analisesgf&quot;</condition>
      <destinationSequenceId>21</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>148</sequence>
      </conditionProcessStatePK>
      <condition>true</condition>
      <destinationSequenceId>146</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;6&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>202</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;servicoConfirmado&quot;) == &quot;Não&quot;</condition>
      <destinationSequenceId>73</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>202</sequence>
      </conditionProcessStatePK>
      <condition>true</condition>
      <destinationSequenceId>157</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>271</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;cancelado&quot;</condition>
      <destinationSequenceId>274</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>271</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;ajuste&quot;</condition>
      <destinationSequenceId>276</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>271</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;gravarRM&quot;</condition>
      <destinationSequenceId>278</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>4</expressionOrder>
        <version>432</version>
        <sequence>271</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;fluxo_cc&quot;)== &quot;aguardaAss&quot;</condition>
      <destinationSequenceId>198</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>305</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;cnpjSolicitante&quot;) != &quot;&quot;</condition>
      <destinationSequenceId>290</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>305</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;cnpjSolicitante&quot;) == &quot;&quot;</condition>
      <destinationSequenceId>308</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>1</expressionOrder>
        <version>432</version>
        <sequence>315</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovaCoordenador&quot;) == &quot;sim&quot; </condition>
      <destinationSequenceId>312</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>2</expressionOrder>
        <version>432</version>
        <sequence>315</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovaCoordenador&quot;) == &quot;nao&quot;</condition>
      <destinationSequenceId>318</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <expressionOrder>3</expressionOrder>
        <version>432</version>
        <sequence>315</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;aprovaCoordenador&quot;) == &quot;ajuste&quot;</condition>
      <destinationSequenceId>346</destinationSequenceId>
      <conditionType>0</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>135</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>6</initialStateSequence>
      <finalStateSequence>132</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>344</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>7</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>14</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>13</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>16</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name>APROVADO</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>247</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>246</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>252</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>251</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Análise TIC</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>258</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>257</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Análise SGF</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>137</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>11</initialStateSequence>
      <finalStateSequence>132</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>19</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>15</initialStateSequence>
      <finalStateSequence>18</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>24</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>17</initialStateSequence>
      <finalStateSequence>23</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>250</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>144</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>260</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>259</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>270</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>269</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Análise SGF</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>28</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>21</initialStateSequence>
      <finalStateSequence>27</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>26</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>23</initialStateSequence>
      <finalStateSequence>11</finalStateSequence>
      <returnLabel></returnLabel>
      <name>SOLICITA AJUSTE</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>57</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>23</initialStateSequence>
      <finalStateSequence>56</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>63</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>23</initialStateSequence>
      <finalStateSequence>58</finalStateSequence>
      <returnLabel></returnLabel>
      <name>SEM PARECER OU PARECER APROVADO</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>337</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>23</initialStateSequence>
      <finalStateSequence>322</finalStateSequence>
      <returnLabel></returnLabel>
      <name>SE A DIRETORIA SOLICITAR PARECER</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>59</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>27</initialStateSequence>
      <finalStateSequence>58</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>62</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>27</initialStateSequence>
      <finalStateSequence>17</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>262</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>27</initialStateSequence>
      <finalStateSequence>261</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>68</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>58</initialStateSequence>
      <finalStateSequence>67</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>74</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>67</initialStateSequence>
      <finalStateSequence>73</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>194</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>67</initialStateSequence>
      <finalStateSequence>193</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Experts</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>266</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>67</initialStateSequence>
      <finalStateSequence>265</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>311</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>67</initialStateSequence>
      <finalStateSequence>310</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Contratação SGF</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>82</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>77</initialStateSequence>
      <finalStateSequence>81</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>153</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>77</initialStateSequence>
      <finalStateSequence>86</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>264</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>77</initialStateSequence>
      <finalStateSequence>263</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>130</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>86</initialStateSequence>
      <finalStateSequence>101</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>206</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>86</initialStateSequence>
      <finalStateSequence>198</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>219</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>101</initialStateSequence>
      <finalStateSequence>218</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>105</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>102</initialStateSequence>
      <finalStateSequence>103</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>106</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>103</initialStateSequence>
      <finalStateSequence>101</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>138</linkSequence>
      </processLinkPK>
      <actionLabel>Finalizar sem Integração</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>103</initialStateSequence>
      <finalStateSequence>88</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Finalizar sem Integração</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>140</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>103</initialStateSequence>
      <finalStateSequence>139</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Revisão</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>210</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>103</initialStateSequence>
      <finalStateSequence>209</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Exportar Dados ao SGF</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>225</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>103</initialStateSequence>
      <finalStateSequence>224</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Anexar Ata</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>116</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>113</initialStateSequence>
      <finalStateSequence>115</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>123</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>115</initialStateSequence>
      <finalStateSequence>122</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>336</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>115</initialStateSequence>
      <finalStateSequence>335</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Gerente demandante</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>351</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>115</initialStateSequence>
      <finalStateSequence>348</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>352</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>115</initialStateSequence>
      <finalStateSequence>248</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>134</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>132</initialStateSequence>
      <finalStateSequence>113</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>155</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>132</initialStateSequence>
      <finalStateSequence>154</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>230</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>132</initialStateSequence>
      <finalStateSequence>229</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>333</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>132</initialStateSequence>
      <finalStateSequence>332</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Gerente Demandante (SEDE)</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>350</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>132</initialStateSequence>
      <finalStateSequence>348</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>142</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>141</initialStateSequence>
      <finalStateSequence>11</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>149</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>144</initialStateSequence>
      <finalStateSequence>148</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>150</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>148</initialStateSequence>
      <finalStateSequence>146</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>151</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>148</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name>APROVADO</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>156</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>154</initialStateSequence>
      <finalStateSequence>132</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>306</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>157</initialStateSequence>
      <finalStateSequence>305</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>162</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>159</initialStateSequence>
      <finalStateSequence>161</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>272</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>161</initialStateSequence>
      <finalStateSequence>271</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>203</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>193</initialStateSequence>
      <finalStateSequence>202</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>200</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>198</initialStateSequence>
      <finalStateSequence>77</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>204</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>202</initialStateSequence>
      <finalStateSequence>73</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>205</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>202</initialStateSequence>
      <finalStateSequence>157</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>208</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>207</initialStateSequence>
      <finalStateSequence>198</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>221</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>211</initialStateSequence>
      <finalStateSequence>220</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>217</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>216</initialStateSequence>
      <finalStateSequence>211</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>223</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>222</initialStateSequence>
      <finalStateSequence>88</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>228</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>227</initialStateSequence>
      <finalStateSequence>157</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>254</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>253</initialStateSequence>
      <finalStateSequence>144</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>256</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>255</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>275</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>271</initialStateSequence>
      <finalStateSequence>274</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Fim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>277</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>271</initialStateSequence>
      <finalStateSequence>276</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>279</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>271</initialStateSequence>
      <finalStateSequence>278</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Exportar Dados</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>288</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>271</initialStateSequence>
      <finalStateSequence>198</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>289</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>281</initialStateSequence>
      <finalStateSequence>198</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>286</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>284</initialStateSequence>
      <finalStateSequence>285</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>287</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>285</initialStateSequence>
      <finalStateSequence>281</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>298</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>290</initialStateSequence>
      <finalStateSequence>297</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>295</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>293</initialStateSequence>
      <finalStateSequence>294</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>296</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>294</initialStateSequence>
      <finalStateSequence>290</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>299</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>297</initialStateSequence>
      <finalStateSequence>281</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>302</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>300</initialStateSequence>
      <finalStateSequence>297</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>304</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>303</initialStateSequence>
      <finalStateSequence>300</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>307</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>305</initialStateSequence>
      <finalStateSequence>290</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Experts</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>309</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>305</initialStateSequence>
      <finalStateSequence>308</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Aguardando Assinatura</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>339</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>312</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>317</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>315</initialStateSequence>
      <finalStateSequence>312</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>319</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>315</initialStateSequence>
      <finalStateSequence>318</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>347</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>315</initialStateSequence>
      <finalStateSequence>346</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Ajustar</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>338</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>322</initialStateSequence>
      <finalStateSequence>17</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>345</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>330</initialStateSequence>
      <finalStateSequence>7</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>349</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>348</initialStateSequence>
      <finalStateSequence>315</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>353</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>246</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>354</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>251</initialStateSequence>
      <finalStateSequence>253</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>355</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>257</initialStateSequence>
      <finalStateSequence>255</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>356</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>259</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>357</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>269</initialStateSequence>
      <finalStateSequence>255</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>358</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>261</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>359</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>265</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>360</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>310</initialStateSequence>
      <finalStateSequence>227</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>361</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>263</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>362</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>218</initialStateSequence>
      <finalStateSequence>216</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>363</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>139</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>364</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>209</initialStateSequence>
      <finalStateSequence>207</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>365</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>224</initialStateSequence>
      <finalStateSequence>216</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>366</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>335</initialStateSequence>
      <finalStateSequence>330</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>367</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>248</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>368</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>229</initialStateSequence>
      <finalStateSequence>227</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>369</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>332</initialStateSequence>
      <finalStateSequence>330</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>370</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>146</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>371</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>220</initialStateSequence>
      <finalStateSequence>222</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>372</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>276</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>373</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>278</initialStateSequence>
      <finalStateSequence>227</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>374</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>308</initialStateSequence>
      <finalStateSequence>207</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>375</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>346</initialStateSequence>
      <finalStateSequence>141</finalStateSequence>
      <returnLabel></returnLabel>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>centroCustoEMedicao</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function integraCentroCusto(idCnt, codColigada){&#xd;
	&#xd;
	var result = &quot;&quot;;&#xd;
	&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@  Preenchimento de Rateio do Contrato -&gt;&quot; + hAPI.getCardValue(&quot;txt_numsol&quot;) + &quot;@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	&#xd;
	var valorTotal = (hAPI.getCardValue(&quot;txt_valor_total&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	var xml = &quot;&quot;;&#xd;
	&#xd;
	//Cria XML de Rateios&#xd;
	var rateios = 0;&#xd;
	var indexes = hAPI.getChildrenIndexes(&quot;centroDeCusto&quot;);&#xd;
	&#xd;
	//Conta a quantidade de rateios com informação preenchida&#xd;
	for (var x = 0; x &lt; indexes.length; x++)&#xd;
	{&#xd;
		if (hAPI.getCardValue(&quot;txt_codprojeto___&quot; + indexes[x]) != &quot;&quot;)&#xd;
		{&#xd;
			rateios = rateios+1;&#xd;
		}&#xd;
	}&#xd;
	//if (rateios &gt; 0) &#xd;
	if (rateios == 1) /*Até a correção do SBC somente será inserido rateio quando houver apenas uma registro devido erro de percentual do SBC. Após correção do problema deve ser alterada essa condição*/ &#xd;
	{&#xd;
	   for (var i = 0; i &lt; indexes.length; i++) &#xd;
	   {&#xd;
		   if (hAPI.getCardValue(&quot;txt_codprojeto___&quot; + indexes[i]) != &quot;&quot;)&#xd;
			{&#xd;
				var txt_codprojeto = hAPI.getCardValue(&quot;txt_codprojeto___&quot; + indexes[i]);&#xd;
				var txt_codacao = hAPI.getCardValue(&quot;txt_codacao___&quot; + indexes[i]);&#xd;
				var txt_codrecurso = hAPI.getCardValue(&quot;txt_codrecurso___&quot; + indexes[i]);&#xd;
				var txt_percentual = hAPI.getCardValue(&quot;txt_percentual___&quot; + indexes[i]).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
				&#xd;
				var valor = parseFloat((parseFloat(txt_percentual) * parseFloat(valorTotal))/parseFloat(100));&#xd;
				&#xd;
				xml += createNode(&quot;ZRATORCAMENTO&quot;);&#xd;
				xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
				xml += setNode(&quot;CODCCUSTO&quot;, txt_codprojeto + &quot;.&quot; + txt_codacao + &quot;.&quot; + txt_codrecurso);&#xd;
				xml += setNode(&quot;PERCENTUAL&quot;, txt_percentual);&#xd;
				xml += setNode(&quot;VALOR&quot;, valor);&#xd;
				xml += setNode(&quot;HISTORICO&quot;, &quot;&quot;);&#xd;
				xml += createNode(&quot;/ZRATORCAMENTO&quot;);&#xd;
			}&#xd;
			&#xd;
	   }&#xd;
	   //cria rateios de Centros de Custo via DataSet especifico&#xd;
		var constraints = new Array();&#xd;
	    constraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;, true, true, ConstraintType.MUST));&#xd;
	    constraints.push(DatasetFactory.createConstraint(&quot;idCnt&quot;, idCnt, idCnt, ConstraintType.MUST));&#xd;
	    constraints.push(DatasetFactory.createConstraint(&quot;rateios&quot;, xml, xml, ConstraintType.MUST));&#xd;
	    var dsItens = DatasetFactory.getDataset(&quot;ds_gera_rateio_contrato&quot;, null, constraints, null);&#xd;
&#xd;
	    if (dsItens != null)&#xd;
		{&#xd;
		    for (var i = 0; i &lt; dsItens.rowsCount; i++) &#xd;
	    	{&#xd;
				result = dsItens.getValue(i, &quot;result&quot;);&#xd;
	    	}&#xd;
		}&#xd;
	   &#xd;
	}&#xd;
	else{&#xd;
		log.error(&quot;@@@@@@@@@@ Não há rateios no processo!&quot;);&#xd;
	}&#xd;
	&#xd;
	return result;&#xd;
}&#xd;
&#xd;
function integraMedicao(idCnt, codColigada){&#xd;
	&#xd;
	var result = &quot;&quot;;&#xd;
	&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@  FaturaMedicoesDoContrato -&gt;&quot; + hAPI.getCardValue(&quot;txt_numsol&quot;) + &quot;@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
&#xd;
    var nSeqItmCnt = 0;&#xd;
    var nSeqMedicao = 0;&#xd;
    var txt_numsol = hAPI.getCardValue(&quot;txt_numsol&quot;);		&#xd;
	var cnt = 0;&#xd;
	var cntNeto = 0;&#xd;
	&#xd;
	var constraints = new Array();&#xd;
    constraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;, true, true, ConstraintType.MUST));&#xd;
    constraints.push(DatasetFactory.createConstraint(&quot;txt_numsol&quot;, txt_numsol, txt_numsol, ConstraintType.MUST));&#xd;
    var dsItens = DatasetFactory.getDataset(&quot;ds_itens_medicao_SGF&quot;, null, constraints, null);&#xd;
&#xd;
    var idprd_TMP = &quot;&quot;; //variavel para controlar a não repetição dos itens&#xd;
    &#xd;
    if (dsItens != null)&#xd;
	{&#xd;
	    for (var i = 0; i &lt; dsItens.rowsCount; i++) &#xd;
    	{&#xd;
	    	var idprd = dsItens.getValue(i, &quot;idprd&quot;);&#xd;
	    	var dt = dsItens.getValue(i, &quot;dtmedicao&quot;);&#xd;
			&#xd;
			cntNeto = cntNeto + 1;&#xd;
			&#xd;
			if (idprd_TMP != idprd)&#xd;
			{&#xd;
				cnt = cnt + 1;&#xd;
			}&#xd;
			&#xd;
			nSeqItmCnt = cnt;&#xd;
			nSeqMedicao = cntNeto;&#xd;
			&#xd;
			var constr = new Array();&#xd;
			constr.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;, true, true, ConstraintType.MUST));&#xd;
			constr.push(DatasetFactory.createConstraint(&quot;idCnt&quot;, idCnt, idCnt, ConstraintType.MUST));&#xd;
			constr.push(DatasetFactory.createConstraint(&quot;nSeqItmCnt&quot;, nSeqItmCnt, nSeqItmCnt, ConstraintType.MUST));&#xd;
			constr.push(DatasetFactory.createConstraint(&quot;nSeqMedicao&quot;, nSeqMedicao, nSeqMedicao, ConstraintType.MUST));&#xd;
		    var dsItens2 = DatasetFactory.getDataset(&quot;ds_gera_faturamento_contrato&quot;, null, constr, null);&#xd;
		    &#xd;
		    sleep(1000);&#xd;
		    &#xd;
		    if (dsItens2 != null)&#xd;
			{&#xd;
			    for (var j = 0; j &lt; dsItens2.rowsCount; j++) &#xd;
		    	{&#xd;
			    	result = dsItens2.getValue(j, &quot;result&quot;);&#xd;
		    	}&#xd;
			}&#xd;
			&#xd;
			idprd_TMP = idprd;&#xd;
    	}&#xd;
	}&#xd;
	else{&#xd;
		log.error(&quot;@@@@@@@@@@ Não há medições no processo!&quot;);&#xd;
	}&#xd;
    &#xd;
	&#xd;
	return result;&#xd;
}&#xd;
&#xd;
function setNode(node, valor)&#xd;
{&#xd;
	var line = createNode(node) + valor + createNode(&quot;/&quot; + node);&#xd;
	return line;&#xd;
}&#xd;
&#xd;
function createNode(node)&#xd;
{&#xd;
	return &quot;&lt;&quot; + node + &quot;&gt;&quot;;&#xd;
}&#xd;
&#xd;
function sleep(milliseconds)&#xd;
{&#xd;
	var start = new Date().getTime();&#xd;
	for (var i = 0; i &lt; 1e7; i++)&#xd;
	{&#xd;
	    if ((new Date().getTime() - start) &gt; milliseconds)&#xd;
	    {&#xd;
	    	break;&#xd;
	    }&#xd;
	}&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask290</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask290(attempt, message) {

    try {
        var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@ Andamento na integração SGF @@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        
        var idPerfilAprovador = 0;
        var idUsuarioAprovador = 0;
        var token = &quot;&quot;;
        
        var clientService = fluigAPI.getAuthorizeClientService();
        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
        
        if(dsToken.values.length &gt; 0)
        {
            
            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
            {
                token = dsToken.getValue(0, &apos;token&apos;);
                //idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
                idPerfilAprovador = &quot;7&quot;;
                idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
            } 
            
            
            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@@@@@ Envio para aprovação @@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            
            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
            {
                var dataAtual = new Date();
                var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
                tmpData = formataData(tmpData);
                
                var dataEnvioformatada = tmpData + &quot; 00:00:00&quot;;	
                
                var dadosEnvio = {
                        CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
                        DataEnvio : dataEnvioformatada,
                        ListaAprovadores : [ {
                            IdPerfilAprovador : idPerfilAprovador,                              
                            IdUsuarioAprovador : idUsuarioAprovador,
                            OrdemAprovacao : &quot;1&quot;
                        } ]
                    }    
                
                var dataEnvio = {
                        companyId: String(getValue(&apos;WKCompany&apos;)),               
                        serviceCode: &apos;integracaoSGF&apos;,
                        endpoint: &apos;/api/Contratacao/EnviarContratacaoAprovacao&apos;,            
                        method: &apos;post&apos;,
                        timeoutService: &apos;100&apos;,          
                        options: {
                            encoding : &apos;UTF-8&apos;,
                            mediaType: &apos;application/json&apos;,
                            useSSL : true
                        },
                        params : dadosEnvio,
                        headers: {
                            &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
                            &apos;TokenSGF&apos; : String(token)
                                }            
                    }
                
                //log.info(&quot;@@@@ JSON.stringify dataEnvio -&gt; &quot; + JSON.stringify(dataEnvio));
                
                var vo = clientService.invoke(JSONUtil.toJSON(dataEnvio));
                //var vo = clientService.invoke(JSON.stringify(dataEnvio));
                var result = JSON.parse(vo.getResult());

                if(vo.getResult()== null || vo.getResult().isEmpty()){
                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
                } else if (vo.getHttpStatusResult() &lt; 300){          
                    
                    if(result.Success == false){
                        var statusLog = &quot;&quot;;
                        if(result.Message != undefined){
                            statusLog += result.Data+&quot;\n&quot;;                      
                        } else {                        
                            for(var i = 0; i &lt; result.Data.length; i++){
                                statusLog += result.Data[i]+&quot;\n&quot;;
                            }
                        }
                        
                    } 
                                    
                                               
                } else {
                    var statusLog = &quot;&quot;;
                    if(result.Message != undefined){
                        statusLog += result.Message+&quot;\n&quot;
                    } else {                        
                        for(var i = 0; i &lt; result.Data.length; i++){
                            statusLog += result.Data[i]+&quot;\n&quot;;
                        }
                    }                
                    
                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
                } 
            }
            
        }     
    
                        
    } catch(error) {       
    throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }

}


function formataData(data){
// converte do formato 00/00/0000 para 0000-00-00
var str = &quot;&quot;;
if(data != &quot;&quot;){
    str = data.split(&quot;/&quot;);                
}
return str[2]+&quot;-&quot;+str[1]+&quot;-&quot;+str[0];
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetas_envia_aprovacao</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask239(attempt, message) {
	        
    try {
	    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
    	if ((solicitacaoXperts == &quot;1&quot; &amp;&amp; hAPI.getCardValue(&quot;cnpjFornecedor&quot;) != &quot;&quot;) ||
    			(solicitacaoXperts == &quot;&quot;))
    	{
    		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@ Andamento na integração SGF @@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            
            var idPerfilAprovador = 0;
            var idUsuarioAprovador = 0;
            var token = &quot;&quot;;
            
	        var clientService = fluigAPI.getAuthorizeClientService();
	        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
	        
	        if(dsToken.values.length &gt; 0)
	        {
	            
	            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
	            {
	                token = dsToken.getValue(0, &apos;token&apos;);
	                idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
	                idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
	            } 
	            
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@ envio para aprovação @@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
		        {
	            	var dataAtual = new Date();
	    		    var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
	    		    tmpData = formataData(tmpData);
	    		    
	    		    var dataEnvioformatada = tmpData + &quot; 00:00:00&quot;;	
	    		    
	            	var dadosEnvio = {
	            			CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
	            			DataEnvio : dataEnvioformatada,
	        				ListaAprovadores : [ {
	        					IdPerfilAprovador : idPerfilAprovador,                              
	        					IdUsuarioAprovador : idUsuarioAprovador,
	        					OrdemAprovacao : &quot;1&quot;
	                        } ]
	                    }    
	            	
	            	var dataEnvio = {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/EnviarContratacaoAprovacao&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosEnvio,
		                    headers: {
		                    	&apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
		                }
	                
	            	//log.info(&quot;@@@@ JSON.stringify dataEnvio -&gt; &quot; + JSON.stringify(dataEnvio));
	            	
	                var vo = clientService.invoke(JSONUtil.toJSON(dataEnvio));
	                //var vo = clientService.invoke(JSON.stringify(dataEnvio));
	                var result = JSON.parse(vo.getResult());

	            	if(vo.getResult()== null || vo.getResult().isEmpty()){
	                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	                } else if (vo.getHttpStatusResult() &lt; 300){          
	                    
	                    if(result.Success == false){
	                        var statusLog = &quot;&quot;;
	                        if(result.Message != undefined){
	                            statusLog += result.Data+&quot;\n&quot;;                      
	                        } else {                        
	                            for(var i = 0; i &lt; result.Data.length; i++){
	                                statusLog += result.Data[i]+&quot;\n&quot;;
	                            }
	                        }
	                        
	                    } 
	                                    
	                                               
	                } else {
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                    	statusLog += result.Message+&quot;\n&quot;
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }                
	                    
	                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	                } 
		        }
	            
	        }     
    	}
                            
    } catch(error) {       
       throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
    
}


function formataData(data){
    // converte do formato 00/00/0000 para 0000-00-00
    var str = &quot;&quot;;
    if(data != &quot;&quot;){
        str = data.split(&quot;/&quot;);                
    }
    return str[2]+&quot;-&quot;+str[1]+&quot;-&quot;+str[0];
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask157_backup</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>
function servicetask157(attempt, message) {
        
    try {
    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
    	if ((solicitacaoXperts == &quot;1&quot; &amp;&amp; hAPI.getCardValue(&quot;cnpjFornecedor&quot;) != &quot;&quot;) ||
    			(solicitacaoXperts == &quot;&quot;))
    	{
    		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@ Iniciando integração SGF @@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            
            var idPerfilAprovador = 0;
            var idUsuarioAprovador = 0;
            var token = &quot;&quot;;
            
            var CodContratacao = &quot;&quot;;
            var IdCredenciadoPJ = 0;
            var IdCredenciadoPF = 0;
            var IdCredenciadoPFSubtituto = 0;
            var IdCredenciadoPFMembros = 0;
            
            
	        var clientService = fluigAPI.getAuthorizeClientService();
	        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
	        
	        if(dsToken.values.length &gt; 0)
	        {
	            
	            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
	            {
	                token = dsToken.getValue(0, &apos;token&apos;);
	                idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
	                idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
	            } 
	            
	            var nome = DatasetFactory.createConstraint(&apos;nomeUsuario&apos;, hAPI.getCardValue(&quot;zoom_gestor_contrato&quot;), hAPI.getCardValue(&quot;zoom_gestor_contrato&quot;), ConstraintType.MUST);
	            var tokenSGF = DatasetFactory.createConstraint(&apos;token&apos;, token, token, ConstraintType.MUST);
	            var dsUsuario = DatasetFactory.getDataset(&apos;ds_SGF_consulta_usuario&apos;, null, [nome, tokenSGF], null);

	            var idResponsavel = 0;
	            var nomeResponsavel = &quot;&quot;;
	            var codigoSecao = 0;
	            
	            
	            if(dsUsuario.values.length &gt; 0)
	            {
	            	idResponsavel = dsUsuario.getValue(0, &apos;idUsuario&apos;);
		            nomeResponsavel = dsUsuario.getValue(0, &apos;nome&apos;);
		            codigoSecao = dsUsuario.getValue(0, &apos;codigoSecao&apos;);
	            }
	            else
            	{
	            	throw &quot;Erro na consulta de usuário&quot;;
            	}
	            
	            
	            var formaPrestacaoServ = 0; // FormaPrestacaoServ : 0=Presencial, 1=A Distância, 2=Híbrida
	            var naturezaPrincipal = &quot;&quot;;
	            
	            if((hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;on&apos;) || (hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;instrutoria&apos;)){
	            	naturezaPrincipal = 2;
	            } else if((hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) != &apos;on&apos;) || (hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) != &apos;instrutoria&apos;)){
	            	naturezaPrincipal = 0;
	            } else if(hAPI.getCardValue(&quot;check_Consultoria&quot;) != &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;on&apos; || (hAPI.getCardValue(&quot;check_Consultoria&quot;) != &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;instrutoria&apos;)){
	            	naturezaPrincipal = 1;
	            }
	            
	            
	            // construção de um array de objetos do público alvo
	            var publicoAlvo = [];
	            
	            if(hAPI.getCardValue(&quot;check_artesao&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(1)});
	            if(hAPI.getCardValue(&quot;check_epp&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(2)});
	            if(hAPI.getCardValue(&quot;check_me&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(3)});
	            if(hAPI.getCardValue(&quot;check_mei&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(4)});
	            if(hAPI.getCardValue(&quot;check_potencialempreendedor&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(5)});
	            if(hAPI.getCardValue(&quot;check_produtorrural&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(6)});
	            if(hAPI.getCardValue(&quot;check_outros&quot;) == &apos;on&apos;)
	                publicoAlvo.push({IdPublicoAlvo : String(7)});
	            
	            
	            var IdArea = 0;
	            var IdSubarea = 0;
	            
	            if (hAPI.getCardValue(&quot;areaContratacao&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;areaContratacao&quot;) != null)
	            	IdArea = hAPI.getCardValue(&quot;areaContratacao&quot;);
	            
	            if (hAPI.getCardValue(&quot;subAreaContratacao&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;subAreaContratacao&quot;) != null)
	            	IdSubarea = hAPI.getCardValue(&quot;subAreaContratacao&quot;);
	            

	            var vlrHoraConsultoria = 0;
	            var vlrHoraInstrutoria = 0;
	            
	            var cargaHorariaConsultoria = 0;
	            var qtdeEntregasInstrutoria = 0;
	           

	            // montagem do array de objetos dos itens
	            var indexesItens = hAPI.getChildrenIndexes(&quot;dadositens&quot;);
	            var qtdItens = indexesItens.length;
	            var contratacaoSubArea = [];

	            for(var i = 1; i &lt;= qtdItens; i++){
	                
	                //var tipoFaturamento = hAPI.getCardValue(&quot;zoom_tipo_faturamento___&quot;+i);
	                var tipoFaturamento = hAPI.getCardValue(&quot;txt_CODTIP___&quot;+i);
	                
	                log.info(&quot;@@@@@@@@@@ tipoFaturamento -&gt; &quot; + tipoFaturamento);
	                
	                if(tipoFaturamento == &quot;001&quot;){
	                    vlrHoraConsultoria = hAPI.getCardValue(&quot;txt_valor___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
	                    cargaHorariaConsultoria = hAPI.getCardValue(&quot;txt_quantidade___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
	                } else if(tipoFaturamento == &quot;013&quot;){
	                    vlrHoraInstrutoria = hAPI.getCardValue(&quot;txt_valor___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
	                    qtdeEntregasInstrutoria = hAPI.getCardValue(&quot;txt_quantidade___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
	                }
	                
	                cargaHorariaConsultoria = parseInt(cargaHorariaConsultoria);
	                qtdeEntregasInstrutoria = parseInt(qtdeEntregasInstrutoria);
	                
	                contratacaoSubArea.push({IdArea : &quot;&quot;, IdSubArea : &quot;&quot;});                
	            }
	            
	            var somaEntregasConsultoria = 0;
	            var somaEntregasInstrutoria = 0;

	            // montagem do array de objetos das entregas
	            var indexesEntregas = hAPI.getChildrenIndexes(&quot;dadositensmedicao&quot;);
	            var qtdEntregas = indexesEntregas.length;                       
	            var entregas = [];
	            
	            for(var e = 1; e &lt;= qtdEntregas; e++){
	                var natureza = &quot;&quot;;
	                for(var n = 1; n &lt;= qtdItens; n++){
	                    if(hAPI.getCardValue(&quot;neto_dadositensmedicao___&quot;+e) == hAPI.getCardValue(&quot;filho_dadositens___&quot;+n)){
	                        var tipoFaturamento = hAPI.getCardValue(&quot;txt_CODTIP___&quot;+n);
	                        
	                        log.info(&quot;@@@@@@@@@@ txt_CODTIP___ - &quot; + hAPI.getCardValue(&quot;txt_CODTIP___&quot;+n));
	                        
	                        if(tipoFaturamento == &quot;001&quot;){
	                            natureza = 0;
	                            somaEntregasConsultoria++;
	                        } else if(tipoFaturamento == &quot;013&quot;){
	                            natureza = 1;
	                            somaEntregasInstrutoria++;
	                        } else {
	                            natureza = 2;
	                        }
	                    }
	                }
	                                
	                entregas.push({
	                    Valor : String(&quot;&quot; + hAPI.getCardValue(&quot;vl_medicao_item___&quot;+e).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;)),
	                    Descricao : String(hAPI.getCardValue(&quot;ds_descricao_entrega_item___&quot;+e)),
	                    Natureza : String(natureza),
	                    Data : String(formataData(hAPI.getCardValue(&quot;dt_medicao_item___&quot;+e)))
	                });
	            }
	            
	            
	            var indexesCCusto = hAPI.getChildrenIndexes(&quot;centroDeCusto&quot;);
	            var qtdOrcamento = indexesCCusto.length;
	            var orcamento = [];
	            
	            for(var o = 1; o &lt;= qtdOrcamento; o++){
	                /*for(var n = 1; n &lt;= qtdItens; n++){
	                    if(hAPI.getCardValue(&quot;neto_dadositensmedicao___&quot;+o) == hAPI.getCardValue(&quot;filho_dadositens___&quot;+n)){
	                        var tipoFaturamento = parseInt(hAPI.getCardValue(&quot;txt_CODTIP___&quot;+o));
	                        
	                        log.info(&quot;@@@@@@@@@@ tipoFaturamento - &quot; + tipoFaturamento);
	                        
	                        if(tipoFaturamento == 1){
	                            natureza = 0;
	                        } else if(tipoFaturamento == 13){
	                            natureza = 1;
	                        } else {
	                            natureza = 2;
	                        }
	                    }
	                }*/
	                
	                orcamento.push({
	                        Natureza : String(naturezaPrincipal),
	                        CodProjeto : String(hAPI.getCardValue(&quot;txt_codprojeto___&quot;+o)),
	                        CodAcao : String(hAPI.getCardValue(&quot;txt_codacao___&quot;+o)),
	                        CodUnidade : String(hAPI.getCardValue(&quot;txt_codrecurso___&quot;+o)),
	                        Percentual : String(hAPI.getCardValue(&quot;txt_percentual___&quot;+o))
	                    });
	            }
	               
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@ Iniciando contratação @@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            var dadosContrato = {
	                            UFContratacao : String(hAPI.getCardValue(&quot;uf&quot;)),
	                            UFCredenciado : String(hAPI.getCardValue(&quot;uf&quot;)),
	                            FormaPrestacaoServ : String(formaPrestacaoServ),
	                            CodSecao : String(codigoSecao),
	                            Natureza : String(naturezaPrincipal),
	                            Responsavel : String(idResponsavel),
	                            ContratacaoSubArea : [ {
	                              IdArea : String(IdArea),                              
	                              IdSubarea : String(IdSubarea)
	                            } ],
	                            PublicoAlvo : publicoAlvo,
	                            Objeto : String(hAPI.getCardValue(&quot;txa_objetocontratacao&quot;)),
	                            JustificativaContratacao : String(hAPI.getCardValue(&quot;txa_justificativa&quot;)),
	                            DataInicio : String(formataData(hAPI.getCardValue(&quot;periodoinicial&quot;))),
	                            DataFim : String(formataData(hAPI.getCardValue(&quot;periodofinal&quot;))),
	                            Cep : String(hAPI.getCardValue(&quot;txt_cep&quot;)),
	                            ValorHoraConsultoria : parseFloat(vlrHoraConsultoria),
	                            CargaHorariaConsultoria : String(cargaHorariaConsultoria),
	                            QtdeEntregasConsultoria : String(somaEntregasConsultoria),
	                            DespesaViagemConsultoria : &quot;&quot;,
	                            DescricaoDespesasConsultoria : &quot;&quot;,
	                            ValorHoraInstrutoria : parseFloat(vlrHoraInstrutoria),
	                            CargaHorariaInstrutoria : String(qtdeEntregasInstrutoria),
	                            QtdeEntregasInstrutoria : String(somaEntregasInstrutoria),
	                            DespesaViagemInstrutoria : &quot;&quot;,
	                            DescricaoDespesasInstrutoria : &quot;&quot;,
	                            Entregas : entregas,
	                            DadosOrcamentarios : orcamento,
	                            IdProduto : &quot;&quot;,
	                            OutroPublicoAlvo : String(hAPI.getCardValue(&quot;txa_outros&quot;)),
	                            JustificativaUFAlternativa : &quot;AUTOMÁTICO - CAMPO NÃO DEFINIDO EM FORMULÁRIO&quot;
	                        }    
	            
	            
	            
	            var dataContrato = {
	                    companyId: String(getValue(&apos;WKCompany&apos;)),               
	                    serviceCode: &apos;integracaoSGF&apos;,
	                    endpoint: &apos;/api/Contratacao/IncluirContratacaoRodizio&apos;,            
	                    method: &apos;post&apos;,
	                    timeoutService: &apos;100&apos;,          
	                    options: {
	                        encoding : &apos;UTF-8&apos;,
	                        mediaType: &apos;application/json&apos;,
	                        useSSL : true
	                    },
	                    params : dadosContrato,
	                    headers: {
	                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
	                        &apos;TokenSGF&apos; : String(token)
	                            }            
	                }
	            
	            log.info(&quot;@@@@ JSON.stringify dataContrato -&gt; &quot; + JSON.stringify(dataContrato));
	            
	            
	            var vo = clientService.invoke(JSON.stringify(dataContrato));
	            
	            var result = JSON.parse(vo.getResult());                                    

	            if(vo.getResult()== null || vo.getResult().isEmpty()){
	               throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	            } else if (vo.getHttpStatusResult() &lt; 300){          
	                
	                if(result.Success == false){
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                        statusLog += result.Data+&quot;\n&quot;;                      
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }
	                    
	                } else if(result.Success == true){
	                    
	                	CodContratacao = result.Data[&quot;CodContratacao&quot;];
	                	
	                	hAPI.setCardValue(&quot;idContratacao&quot;, result.Data[&quot;IdContratacao&quot;]);
	                    hAPI.setCardValue(&quot;codContratacao&quot;, result.Data[&quot;CodContratacao&quot;]);
	                    hAPI.setCardValue(&quot;txt_cc&quot;, result.Data[&quot;CodContratacao&quot;]);
	                    
	                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	                    log.info(&quot;@@@@@@@@@@@@@@@@@@ CONTRATACAO INCLUIDA @@@@@@@@@@@@@@@@@@@@&quot;);
	                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	                    log.info(&quot;@@@@ idContratacao -&gt; &quot; + result.Data[&quot;IdContratacao&quot;]);
	                    log.info(&quot;@@@@ codContratacao -&gt; &quot; + result.Data[&quot;CodContratacao&quot;]);
	                }                
	                                           
	            } else {
	                var statusLog = &quot;&quot;;
	                if(result.Message != undefined){
	                	statusLog += result.Message+&quot;\n&quot;
	                } else {                        
	                    for(var i = 0; i &lt; result.Data.length; i++){
	                        statusLog += result.Data[i]+&quot;\n&quot;;
	                    }
	                }                
	                
	                throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	            }     
	            
	            
	            
	            
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@ envio para aprovação @@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
		        {
	            	var dataAtual = new Date();
	    		    var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
	    		    tmpData = formataData(tmpData);
	    		    
	    		    var dataEnvioformatada = tmpData + &quot; 00:00:00&quot;;	
	    		    
	            	var dadosEnvio = {
	            			CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
	            			DataEnvio : dataEnvioformatada,
	        				ListaAprovadores : [ {
	        					IdPerfilAprovador : idPerfilAprovador,                              
	        					IdUsuarioAprovador : idUsuarioAprovador,
	        					OrdemAprovacao : &quot;1&quot;
	                        } ]
	                    }    
	            	
	            	var dataEnvio = {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/EnviarContratacaoAprovacao&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosEnvio,
		                    headers: {
		                    	&apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
		                }
	                
	            	//log.info(&quot;@@@@ JSON.stringify dataEnvio -&gt; &quot; + JSON.stringify(dataEnvio));
	            	
	                var vo = clientService.invoke(JSONUtil.toJSON(dataEnvio));
	                //var vo = clientService.invoke(JSON.stringify(dataEnvio));
	                var result = JSON.parse(vo.getResult());

	            	if(vo.getResult()== null || vo.getResult().isEmpty()){
	                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	                } else if (vo.getHttpStatusResult() &lt; 300){          
	                    
	                    if(result.Success == false){
	                        var statusLog = &quot;&quot;;
	                        if(result.Message != undefined){
	                            statusLog += result.Data+&quot;\n&quot;;                      
	                        } else {                        
	                            for(var i = 0; i &lt; result.Data.length; i++){
	                                statusLog += result.Data[i]+&quot;\n&quot;;
	                            }
	                        }
	                        
	                    } 
	                                    
	                                               
	                } else {
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                    	statusLog += result.Message+&quot;\n&quot;
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }                
	                    
	                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	                } 
		        }
	            
	            
	            
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@ aprovação da contratação @@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            
	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
		        {
	            	var dataAtual = new Date();
	    		    var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
	    		    tmpData = formataData(tmpData);
	    		    
	    		    var dataEnvioformatada = tmpData + &quot; 01:00:00&quot;;	
	    		    
	    		    
	            	var dadosAprovar = {
	            			CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
	            			DataParecer : dataEnvioformatada
	                    }    
	            	
	            	var dataAprovar = {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/AprovarContratacao&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosAprovar,
		                    headers: {
		                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
		                }
	                
	            	//log.info(&quot;@@@@ JSON.stringify dataAprovar -&gt; &quot; + JSON.stringify(dataAprovar));
	            	
	                var vo = clientService.invoke(JSONUtil.toJSON(dataAprovar));
	                //var vo = clientService.invoke(JSON.stringify(dataAprovar));
	                var result = JSON.parse(vo.getResult());                                    

	            	if(vo.getResult()== null || vo.getResult().isEmpty()){
	                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	                } else if (vo.getHttpStatusResult() &lt; 300){          
	                    
	                    if(result.Success == false){
	                        var statusLog = &quot;&quot;;
	                        if(result.Message != undefined){
	                            statusLog += result.Data+&quot;\n&quot;;                      
	                        } else {                        
	                            for(var i = 0; i &lt; result.Data.length; i++){
	                                statusLog += result.Data[i]+&quot;\n&quot;;
	                            }
	                        }
	                        
	                    } else if(result.Success == true){
	                        
	                        hAPI.setCardValue(&quot;idAprovacaoContratacao&quot;, result.Data.IdAprovacaoContratacao);
                        
	                    }                
	                                               
	                } else {
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                    	statusLog += result.Message+&quot;\n&quot;
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }                
	                    
	                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	                } 
		        }
	            
	            
	            
	            //*************************************************************************************
	            //caso for uma solicitação vinda do xperts, realiza a busca e atribuição do credenciado
	            //*************************************************************************************
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@ Buscando Id&apos;s do credenciado @@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);


	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
		        {
	            	//var cnpjFornecedor = hAPI.getCardValue(&quot;cnpjFornecedor&quot;).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;/&quot;,&quot;&quot;).replace(&quot;-&quot;,&quot;&quot;);
	            	
	            	var dadosEnvio = {
	            			
	            			UFCredenciado : String(hAPI.getCardValue(&quot;uf&quot;)),
                            Natureza : String(naturezaPrincipal),
                            FormaPrestacaoServ : String(formaPrestacaoServ),
	        				Areas : [ {
	        					IdArea : String(IdArea),                              
	        					SubAreas : [ String(IdSubarea) ]
	                        } ]
	                    }    
	            	
	            	
	            	var dataConsultaCredenciado = {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/GerarRodizio&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosEnvio,
		                    headers: {
		                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
		                }
	                
	            	//log.info(&quot;@@@@ JSON.stringify dataConsultaCredenciado -&gt; &quot; + JSON.stringify(dataConsultaCredenciado));
	            	
	                var vo = clientService.invoke(JSON.stringify(dataConsultaCredenciado));
	                var result = JSON.parse(vo.getResult());                                    

	                log.info(&quot;@@@@ result dataConsultaCredenciado -&gt; &quot; + result);
	                log.info(&quot;@@@@ result dataConsultaCredenciado -&gt; &quot; + JSON.stringify(result));
	                
	                if(vo.getResult()== null || vo.getResult().isEmpty()){
	                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	                } else if (vo.getHttpStatusResult() &lt; 300){          
	                    
	                    if(result.Success == false){
	                        var statusLog = &quot;&quot;;
	                        if(result.Message != undefined){
	                            statusLog += result.Data+&quot;\n&quot;;                      
	                        } else {                        
	                            for(var i = 0; i &lt; result.Data.length; i++){
	                                statusLog += result.Data[i]+&quot;\n&quot;;
	                            }
	                        }
	                        
	                    } else if(result.Success == true){
	                        
	                    	var cnpjFornecedor = hAPI.getCardValue(&quot;cnpjFornecedor&quot;).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;/&quot;,&quot;&quot;).replace(&quot;-&quot;,&quot;&quot;);
	                    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
	                    	
	                    	
	                    	log.info(&quot;@@@@ result.Data.length -&gt; &quot; + result.Data.length);
	                    	
	                    	for (var i = 0; i &lt; result.Data.length; i++) 
	                    	{
	                    		
	                    		 
	                    		log.info(&quot;@@@@ result.Data[i].CNPJ -&gt; &quot; + result.Data[i].CNPJ);
	                    		log.info(&quot;@@@@ result.Data[i].IdCredenciadoPessoaJuridica -&gt; &quot; + result.Data[i].IdCredenciadoPessoaJuridica);
	                    		log.info(&quot;@@@@ result.Data[i].IdCredenciadoPessoaJuridica -&gt; &quot; + result.Data[i].IdCredenciadoPessoaJuridica);
	                    		
	                    		
	                    		if ((solicitacaoXperts == &quot;1&quot; &amp;&amp; result.Data[i].CNPJ == cnpjFornecedor) ||
	                    			(solicitacaoXperts == &quot;&quot;))
	                    		{	
	                    			log.info(&quot;@@@@ entrou If &quot; + result.Data[i].IdCredenciadoPessoaJuridica);
	                    			log.info(&quot;@@@@ result.Data[i].EquipeTecnica.length &quot; + result.Data[i].EquipeTecnica.length);
		                    		
	                    			hAPI.setCardValue(&quot;IdCredenciadoPJ&quot;, result.Data[i].IdCredenciadoPessoaJuridica);
	                    			IdCredenciadoPJ = result.Data[i].IdCredenciadoPessoaJuridica;
	                    			
	                    			
			                        if (result.Data[i].EquipeTecnica.length == 0)
		                        	{
			                        	throw &quot;Equipe técnica não definida. \n\n&quot; + statusLog;   
		                        	}
			                        else if (result.Data[i].EquipeTecnica.length == 1)
		                        	{
			                        	log.info(&quot;@@@@ entrou If - 1 &quot;);
			                        	
			                        	hAPI.setCardValue(&quot;IdCredenciadoPFSubtituto&quot;, result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica);
				                        hAPI.setCardValue(&quot;IdCredenciadoPF&quot;, result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica);
				                        hAPI.setCardValue(&quot;IdCredenciadoPFMembros&quot;, result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica);
		                        	
				                        IdCredenciadoPF = result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica;
				                        IdCredenciadoPFSubtituto =  result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica;
				                        IdCredenciadoPFMembros = result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica;
		                        	}
			                        
			                        //é necessário informar um PF substituto
			                        //se só tiver 1 PF, usa ele como substituto
			                        //caso contrário, usa o 2o PF como substituto
			                        
			                        else if (result.Data[i].EquipeTecnica.length &gt; 1)
		                        	{
			                        	log.info(&quot;@@@@ entrou If - 2 &quot;);
			                        	hAPI.setCardValue(&quot;IdCredenciadoPFSubtituto&quot;, result.Data[i].EquipeTecnica[1].IdCredenciadoPessoaFisica);
				                        hAPI.setCardValue(&quot;IdCredenciadoPF&quot;, result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica);
				                        hAPI.setCardValue(&quot;IdCredenciadoPFMembros&quot;, result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica);

				                        IdCredenciadoPF = result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica;
				                        IdCredenciadoPFSubtituto =  result.Data[i].EquipeTecnica[1].IdCredenciadoPessoaFisica;
				                        IdCredenciadoPFMembros = result.Data[i].EquipeTecnica[0].IdCredenciadoPessoaFisica;
				                        
		                        	}
			                        
			                        
			                        log.info(&quot;@@@@ codContratacao &quot; + hAPI.getCardValue(&quot;codContratacao&quot;));
			                        log.info(&quot;@@@@ IdCredenciadoPFSubtituto &quot; + hAPI.getCardValue(&quot;IdCredenciadoPFSubtituto&quot;));
			                        log.info(&quot;@@@@ IdCredenciadoPF &quot; + hAPI.getCardValue(&quot;IdCredenciadoPF&quot;));
			                        log.info(&quot;@@@@ IdCredenciadoPFMembros &quot; + hAPI.getCardValue(&quot;IdCredenciadoPFMembros&quot;));
	                    		}
                    		}
	                    }                
	                                               
	                } else {
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                    	statusLog += result.Message+&quot;\n&quot;
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }                
	                    
	                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	                } 
		        }
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@ Atribui o credenciado @@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            //chama a escolha do  fornecedor credenciado
	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
	            {
	    		    var dataAtual = new Date();
	    		    var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
	    		    tmpData = formataData(tmpData);
	    		    
	    		    var dataEnvioFormatada = tmpData + &quot; 06:00:00&quot;;	
	    		    var dataRespostaFormatada = tmpData + &quot; 08:00:00&quot;;
	    		    
	            	var dadosEscolherCredenciado = {
	            			CodContratacao : CodContratacao,
	            			IdCredenciadoPJ: String(IdCredenciadoPJ),
	            			IdCredenciadoPF: String(IdCredenciadoPF),
	            			IdCredenciadoPFSubtituto: String(IdCredenciadoPFSubtituto),
	            			IdCredenciadoPFMembros: [String(IdCredenciadoPFMembros)],
	            		    DataEnvio: dataEnvioFormatada,
	            		    DataResposta: dataRespostaFormatada
	                    }  
	            	
	            	
	            	var dataEscolherCredenciado = 
		            {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/EscolherCredenciadoContratacao&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosEscolherCredenciado,
		                    headers: {
		                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
	                }
	            	
	            	log.info(&quot;@@@@ dadosEscolherCredenciado -&gt; &quot; + dadosEscolherCredenciado);
	            	log.info(&quot;@@@@ dataEscolherCredenciado -&gt; &quot; + dataEscolherCredenciado);
	            	
	            	log.info(&quot;@@@@ JSON.stringify dadosEscolherCredenciado -&gt; &quot; + JSON.stringify(dadosEscolherCredenciado));
	            	log.info(&quot;@@@@ JSON.stringify dataEscolherCredenciado -&gt; &quot; + JSON.stringify(dataEscolherCredenciado));
	            	
	            	var vo = clientService.invoke(JSON.stringify(dataEscolherCredenciado));
	            	
	            	//(JSON.stringify(dataConsultaCredenciado));
		            var result = JSON.parse(vo.getResult());                                    

	            	if(vo.getResult()== null || vo.getResult().isEmpty())
		            {
		               throw &quot;Houve um erro no retorno da integração com a escolha do credenciado. O restorno está vazio.&quot;;                          
		            } 
		            else if (vo.getHttpStatusResult() &lt; 300)
		            {          
		                
		                if(result.Success == false)
		                {
		                    var statusLog = &quot;&quot;;
		                    if(result.Message != undefined)
		                    {
		                        statusLog += result.Data+&quot;\n&quot;;                      
		                    } 
		                    else 
		                    {                        
		                        for(var i = 0; i &lt; result.Data.length; i++)
		                        {
		                            statusLog += result.Data[i]+&quot;\n&quot;;
		                        }
		                    }
		                    
		                } 
		                                           
		            } 
		            else 
		            {
		                var statusLog = &quot;&quot;;
		                if(result.Message != undefined){
		                	statusLog += result.Message+&quot;\n&quot;;       
		                	
		                } else {                        
		                    for(var i = 0; i &lt; result.Data.length; i++){
		                        statusLog += result.Data[i]+&quot;\n&quot;;
		                    }
		                }                
		                
		                throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
		            }
	            }
	            
	            //*************************************************************************************
	            //caso NÃO for uma solicitação vinda do xperts, realiza o rodizio
	            //*************************************************************************************
	            
	            else
            	{
	            	
            	}
	            
	        }     
    	}
                            
    } catch(error) {       
       throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
    
}


function formataData(data){
    // converte do formato 00/00/0000 para 0000-00-00
    var str = &quot;&quot;;
    if(data != &quot;&quot;){
        str = data.split(&quot;/&quot;);                
    }
    return str[2]+&quot;-&quot;+str[1]+&quot;-&quot;+str[0];
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterTaskComplete</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterTaskComplete(colleagueId,nextSequenceId,userList){&#xd;
&#xd;
	var CURRENT_STATE = getValue(&quot;WKNumState&quot;);&#xd;
	&#xd;
	&#xd;
&#xd;
	if (CURRENT_STATE == 132){&#xd;
&#xd;
		disparaEmailGestores();&#xd;
&#xd;
	}	&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
function disparaEmailGestores(){&#xd;
&#xd;
	log.info(&apos;@@@@@@@@@@@@@@@@@@@@@@@@@@ disparando e-mail &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&apos;);&#xd;
&#xd;
	var numeroSol = getValue(&quot;WKNumProces&quot;);&#xd;
	var dataSolicitacao = getValue(&quot;txt_datasol&quot;);&#xd;
	var objetoContratacao = getValue(&quot;txa_objetocontratacao&quot;);&#xd;
	var valorContratacao = getValue(&quot;txt_valor_total&quot;);&#xd;
	var solicitante = hAPI.getCardValue(&quot;txt_solicitante&quot;);&#xd;
	var gerencia = hAPI.getCardValue(&quot;unidadeDemandante&quot;);&#xd;
&#xd;
&#xd;
	log.info(&apos;@@@@@@@@@@@@@@@@@@@@@@@@@ &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; email do gerente do projeto&apos; + numeroSol);&#xd;
&#xd;
	var html =&apos;&apos;;&#xd;
&#xd;
	html += &quot; &lt;h4&gt;AVISO: PROCESSO DE CONTRATAÇÃO SGF - FLUIG - SEBRAE/MT N°: &quot; + numeroSol + &quot; &lt;/h4&gt;                                &quot;;			  &#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;p&gt;Caro(a) Gestor, &lt;/p&gt;      																							&quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;p&gt;Foi aberta uma solicitação no fluig, para o seu projeto, conforme os dados abaixo:&lt;/p&gt;                             &quot;;	&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;	   &#xd;
	html += &quot; &lt;p&gt; Número da solicitação: &quot;+numeroSol+&quot;&lt;/p&gt;                                                                          &quot;;&#xd;
	html += &quot; &lt;p&gt; Data da Solicitação: &quot;+dataSolicitacao+&quot;&lt;/p&gt;                                                                      &quot;;&#xd;
	html += &quot; &lt;p&gt; Total Contratação: &quot;+ valorContratacao+&quot;&lt;/p&gt;                                                                      &quot;;&#xd;
	html += &quot; &lt;p&gt; Solicitante: &quot; + solicitante+ &quot; &lt;/p&gt;                                                                              &quot;;&#xd;
	html += &quot; &lt;p&gt; Gerência: &quot; + gerencia + &quot; &lt;/p&gt;                                                                                   &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;h5&gt; OBJETO CONTRATAÇÃO: &lt;/h5&gt;                            									                        &quot;;&#xd;
	html += &quot; &lt;br /&gt;                                                                                                                &quot;;&#xd;
	html += &quot; &lt;p&gt;&quot;+objetoContratacao+&quot;&lt;/p&gt;                                                                                          &quot;;&#xd;
&#xd;
&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	try{&#xd;
		//Monta mapa com parâmetros do template&#xd;
		var parametros = new java.util.HashMap();&#xd;
&#xd;
		parametros.put(&quot;CORPO_EMAIL&quot;, html);			   &#xd;
&#xd;
		//Este parâmetro é obrigatório e representa o assunto do e-mail&#xd;
		parametros.put(&quot;subject&quot;, &quot;PROCESSO SGF - &quot; + numeroSol);&#xd;
&#xd;
&#xd;
		var destinatarios = new java.util.ArrayList();&#xd;
&#xd;
&#xd;
		//INICIO DO CONTROLE DOS DESTINATÁRIOS&#xd;
		var gestores = [];&#xd;
&#xd;
		var indexes = hAPI.getChildrenIndexes(&quot;centroDeCusto&quot;);&#xd;
		for (var i = 0; i &lt; indexes.length; i++) {&#xd;
			var projeto = hAPI.getCardValue(&quot;txt_codprojeto___&quot; + indexes[i]);&#xd;
			gestores.push(DatasetFactory.createConstraint(&apos;txt_CodigoProjeto&apos;, projeto, projeto, ConstraintType.SHOULD));&#xd;
&#xd;
		}&#xd;
&#xd;
		var dsConsultaGestores = DatasetFactory.getDataset(&apos;ds_consultaConfiguracaoCadastroGestores&apos;, null, gestores, null);&#xd;
&#xd;
		for (var i = 0; i &lt; dsConsultaGestores.rowsCount; i++) {&#xd;
&#xd;
			if(dsConsultaGestores.getValue(i, &quot;txt_UsuarioGestor&quot;) != hAPI.getCardValue(&quot;txt_wkUser&quot;)){&#xd;
&#xd;
				destinatarios.add(dsConsultaGestores.getValue(i, &quot;txt_UsuarioGestor&quot;));&#xd;
&#xd;
			}&#xd;
		}&#xd;
&#xd;
&#xd;
		//destinatarios.add(&quot;vagner.duarte@mt.sebrae.com.br&quot;);&#xd;
&#xd;
&#xd;
		//Envia e-mail&#xd;
		notifier.notify(&quot;774b35b6-6124-48de-996a-f3fbf3f53d42&quot;, &quot;template_emailFluig&quot;, parametros, destinatarios, &quot;text/html&quot;);&#xd;
		//primeiro parâmetro e a chapa do remetente do e-mail (Tem que ser um usuário ativo no FLUIG).&#xd;
&#xd;
	} catch(e){&#xd;
		log.info(e);&#xd;
	}	&#xd;
&#xd;
&#xd;
&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>calculateAgreement</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/****** &#xd;** Enable customization script to change agreement calculation. &#xd;** Input: &#xd;**	stateId -&gt; Current state, whose agreement percentage is being calculated. &#xd;**	agreementData.get(&quot;currentPercentage&quot;) -&gt; Current percentage, calculated by the workflow engine&#xd;**	agreementData.get(&quot;currentDestState&quot;) -&gt; Current destination state. Zero, if process won&apos;t move&#xd;**	agreementData.get(&quot;currentDestUsers&quot;) -&gt; Current destination users. Empty if process won&apos;t move&#xd;**/&#xd;function calculateAgreement(currentState, agreementData) {&#xd;	&#xd;	if (currentState == 113)&#xd;	{&#xd;		var usuario = getValue(&quot;WKUser&quot;);&#xd;		&#xd;		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;		log.info(&quot;@@@@@@ calculateAgreement @@@@@@@@@@@&quot;);&#xd;		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;		&#xd;		&#xd;		var aprovafiscal = hAPI.getCardValue(&apos;aprovafiscal&apos;);&#xd;		&#xd;		if (aprovafiscal != &quot;sim&quot;)&#xd;		{&#xd;			agreementData.put(&quot;currentPercentage&quot;, 100);&#xd;			agreementData.put(&quot;currentDestState&quot;, getValue(&quot;WKNextState&quot;));&#xd;			agreementData.put(&quot;currentDestUsers&quot;, &quot;System:Auto&quot;);&#xd;		}&#xd;	}&#xd;}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId){&#xd;
	&#xd;
    /* ====== Variaveis de sistema ====== */&#xd;
	var solicitante = hAPI.getCardValue(&quot;txt_solicitante&quot;);&#xd;
	var WKCompletTask = getValue(&quot;WKCompletTask&quot;);&#xd;
	var user = getValue(&quot;WKUser&quot;);&#xd;
	var numSolicitacao = getValue(&quot;processInstanceId&quot;);&#xd;
	&#xd;
	hAPI.setCardValue(&quot;txt_numsol&quot;, processId);&#xd;
	hAPI.setCardValue(&quot;descricaoSolicitacao&quot;, &quot;Data de início - &quot; + hAPI.getCardValue(&quot;periodoinicial&quot;));&#xd;
	&#xd;
	&#xd;
	&#xd;
	// redirencionando dados vindos do portal XPERTS&#xd;
    if(WKCompletTask != &quot;false&quot; &amp;&amp; WKCompletTask != false){&#xd;
        &#xd;
        var dataSolicitacao = new Date();&#xd;
        &#xd;
        var dia = String(dataSolicitacao.getDate());&#xd;
        if(dia.length == 1) dia = &quot;0&quot; + dia;&#xd;
        &#xd;
        var mes = String(dataSolicitacao.getMonth() + 1);&#xd;
        if(mes.length == 1) mes = &quot;0&quot; + mes;&#xd;
        &#xd;
        &#xd;
        var status = &quot;Aberto&quot;;&#xd;
                &#xd;
        //hAPI.getCardValue(&quot;TIPOGESTAO&quot;)&#xd;
                &#xd;
        hAPI.setCardValue(&quot;NUMEROTAREFA&quot;, numSolicitacao);&#xd;
        hAPI.setCardValue(&quot;txt_datasol&quot;, dia + &quot;/&quot; + mes + &quot;/&quot; + dataSolicitacao.getFullYear());&#xd;
        &#xd;
        if(user == &quot;iniciaratividadedesolicitacaodecadastrodesgfpartin&quot;) { &#xd;
            hAPI.seCardValue(&quot;txt_solicitante&quot;, &quot;portal Xperts&quot;); &#xd;
            hAPI.setCartValue(&quot;solicitacaoPortalXperts&quot;, &quot;0&quot;);&#xd;
        }        &#xd;
               &#xd;
        // endereço de realização do serviço&#xd;
        hAPI.setCardValue(&quot;txt_estado&quot;, hAPI.getCardValue(&quot;_UfSolicitante&quot;));&#xd;
        hAPI.setCardValue(&quot;txt_cidade&quot;, hAPI.getCardValue(&quot;_cidadeSolicitante&quot;));&#xd;
        hAPI.setCardValue(&quot;txt_rua&quot;, hAPI.getCardValue(&quot;_enderecoSolicitante&quot;));        &#xd;
        &#xd;
        hAPI.setCardValue(&quot;area&quot;, hAPI.getCardValue(&quot;areaContratacao&quot;));&#xd;
        hAPI.setCardValue(&quot;subarea&quot;, hAPI.getCardValue(&quot;subAreaContratacao&quot;));&#xd;
        &#xd;
    }&#xd;
	&#xd;
    //disparaEmailGestores();&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>createXmlContrato</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function createXmlContrato(codColigada){&#xd;
	&#xd;
	var xml = &quot;&quot;;&#xd;
	&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@  CRIAÇÃO DO CONTRATO SGF SOLICITAÇÃO -&gt;&quot; + hAPI.getCardValue(&quot;txt_numsol&quot;) + &quot;@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	&#xd;
		&#xd;
	xml=&quot;&lt;CtrCnt&gt;&quot;;&#xd;
	xml = createTCNT(xml,codColigada);&#xd;
	xml = createTCNTHISTORICO(xml,codColigada);&#xd;
	xml = createTCNTCOMPL(xml,codColigada);&#xd;
	xml = createTITMCNT(xml,codColigada);&#xd;
	xml = createTITMCNTMEDICAO(xml,codColigada);&#xd;
	&#xd;
	xml=xml+&quot;&lt;/CtrCnt&gt;&quot;;&#xd;
	&#xd;
	return xml;&#xd;
}&#xd;
&#xd;
function createTCNT(xml,codColigada)&#xd;
{&#xd;
	var valorTotal = (hAPI.getCardValue(&quot;txt_valor_total&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	var index = 1;&#xd;
	var dataIni = hAPI.getCardValue(&quot;periodoinicial&quot;);&#xd;
	var dataInicio = dataIni.substring(6, 10) + &quot;-&quot; + dataIni.substring(3, 5) + &quot;-&quot;+ dataIni.substring(0, 2);&#xd;
	&#xd;
	var dataFi = hAPI.getCardValue(&quot;periodofinal&quot;);&#xd;
	var dataFim = dataFi.substring(6, 10) + &quot;-&quot; + dataFi.substring(3, 5) + &quot;-&quot;+ dataFi.substring(0, 2);&#xd;
	&#xd;
	var dataCont = hAPI.getCardValue(&quot;txt_datasol&quot;);&#xd;
	var dataContrato = dataCont.substring(6, 10) + &quot;-&quot; + dataCont.substring(3, 5) + &quot;-&quot;+ dataCont.substring(0, 2);&#xd;
	&#xd;
	var dataAss = hAPI.getCardValue(&quot;txt_data_ass_contrato&quot;);&#xd;
	&#xd;
	if (dataAss == &quot;&quot;)&#xd;
		dataAss = dataContrato;&#xd;
	&#xd;
	var dataAssinatura = dataAss.substring(6, 10) + &quot;-&quot; + dataAss.substring(3, 5) + &quot;-&quot;+ dataAss.substring(0, 2);&#xd;
	&#xd;
	&#xd;
	var nroContrato = hAPI.getCardValue(&quot;txt_cc&quot;);&#xd;
	var cartaContrato = hAPI.getCardValue(&quot;txtNroContrato&quot;);&#xd;
	&#xd;
	&#xd;
	xml += createNode(&quot;TCNT&quot;);&#xd;
&#xd;
    xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
    xml += setNode(&quot;CODCOLIGADA2&quot;, codColigada);&#xd;
    xml += setNode(&quot;IDCNT&quot;, &quot;-1&quot;);&#xd;
    xml += setNode(&quot;CODTCN&quot;, &quot;002&quot;);&#xd;
    xml += setNode(&quot;CODFILIAL&quot;, &quot;1&quot;);&#xd;
    xml += setNode(&quot;CODUSUARIO&quot;, &quot;fluig_sebraemt&quot;); //Buscar login do ultimo usuario aprovador&#xd;
    xml += setNode(&quot;CODSTACNT&quot;, &quot;001&quot;);&#xd;
    xml += setNode(&quot;NATUREZA&quot;, &quot;1&quot;); &#xd;
    xml += setNode(&quot;CODCPG&quot;, &quot;01&quot;);		&#xd;
    xml += setNode(&quot;CODIGOCONTRATO&quot;, cartaContrato);&#xd;
    xml += setNode(&quot;NOME&quot;, nroContrato + &quot; - &quot; + cartaContrato);&#xd;
    xml += setNode(&quot;CODCOLCXA&quot;, &quot;1&quot;);&#xd;
    xml += setNode(&quot;CODCXA&quot;, &quot;&quot;);&#xd;
    xml += setNode(&quot;CODDEPARTAMENTO&quot;, hAPI.getCardValue(&quot;codUnidadeDemandante&quot;));&#xd;
    xml += setNode(&quot;COMISSAOVEN&quot;, &quot;0.00&quot;);&#xd;
    xml += setNode(&quot;COMISSAOVEN2&quot;, &quot;0.00&quot;);&#xd;
&#xd;
    var objeto = &quot;&quot; + hAPI.getCardValue(&quot;txa_objetocontratacao&quot;).replace(&quot;&amp;&quot;,&quot;e&quot;);&#xd;
    &#xd;
    xml += setNode(&quot;HISTORICOCURTO&quot;, objeto.substr(0,250));&#xd;
	xml += setNode(&quot;CODTIP&quot;, hAPI.getCardValue(&quot;txt_CODTIP_contrato&quot;));&#xd;
	xml += setNode(&quot;CODCFO&quot;, hAPI.getCardValue(&quot;txt_forcodcfo&quot;));  &#xd;
    xml += setNode(&quot;CODCOLCFO&quot;, codColigada);&#xd;
    &#xd;
    //novos campos conforme analise marcelo henrique&#xd;
    xml += setNode(&quot;DIAFATURAMENTO&quot;, &quot;0&quot;);&#xd;
    xml += setNode(&quot;DIASCARENPARAFAT&quot;, &quot;0&quot;);&#xd;
    xml += setNode(&quot;CODCOLCFODEST&quot;, codColigada);&#xd;
&#xd;
    //gravando gestor e fiscal do contrato&#xd;
    //fiscal no fluig -&gt; gestor no RM&#xd;
    if (hAPI.getCardValue(&quot;usuario_fiscal_contrato_RM&quot;) != &quot;&quot;)&#xd;
    	xml += setNode(&quot;CODVEN&quot;, hAPI.getCardValue(&quot;usuario_fiscal_contrato_RM&quot;));&#xd;
    else&#xd;
    	xml += setNode(&quot;CODVEN&quot;, hAPI.getCardValue(&quot;codven&quot;));&#xd;
    &#xd;
    //gestor no fluig -&gt; gerente no RM&#xd;
    if (hAPI.getCardValue(&quot;usuario_gestor_contrato_RM&quot;) != &quot;&quot;)&#xd;
    	xml += setNode(&quot;CODVEN2&quot;, hAPI.getCardValue(&quot;usuario_gestor_contrato_RM&quot;));&#xd;
    else&#xd;
    	xml += setNode(&quot;CODVEN2&quot;, hAPI.getCardValue(&quot;codven&quot;));&#xd;
    &#xd;
    xml += setNode(&quot;CODMOEVALORCONTRATO&quot;, &quot;R$&quot;);&#xd;
    xml += setNode(&quot;VALORCONTRATO&quot;, valorTotal);&#xd;
    xml += setNode(&quot;DATAINICIO&quot;, dataInicio);&#xd;
    xml += setNode(&quot;DATAFIM&quot;, dataFim);&#xd;
    xml += setNode(&quot;DATACONTRATO&quot;, dataAssinatura);&#xd;
    xml += setNode(&quot;DIAFATURAMENTO&quot;, &quot;0&quot;);&#xd;
    xml += setNode(&quot;DIASCARENPARAFAT&quot;, &quot;0&quot;);&#xd;
    xml += setNode(&quot;DIASCARENCANCFAT&quot;, &quot;30&quot;);&#xd;
    xml += setNode(&quot;IMPRIMEMOV&quot;, &quot;1&quot;);&#xd;
	xml += createNode(&quot;/TCNT&quot;);&#xd;
	&#xd;
	return xml;	&#xd;
	&#xd;
}&#xd;
&#xd;
function createTCNTCOMPL(xml,codColigada)&#xd;
{&#xd;
	//var valorTotal = hAPI.getCardValue(&quot;txt_valor_total&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	var valorTotal = (hAPI.getCardValue(&quot;txt_valor_total&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	&#xd;
	var dataIni = hAPI.getCardValue(&quot;periodoinicial&quot;);&#xd;
	var dataInicio = dataIni.substring(6, 10) + &quot;-&quot; + dataIni.substring(3, 5) + &quot;-&quot;+ dataIni.substring(0, 2);&#xd;
	&#xd;
	var dataFi = hAPI.getCardValue(&quot;periodofinal&quot;);&#xd;
	var dataFim = dataFi.substring(6, 10) + &quot;-&quot; + dataFi.substring(3, 5) + &quot;-&quot;+ dataFi.substring(0, 2);&#xd;
	&#xd;
	var data_fim_vigencia = hAPI.getCardValue(&quot;data_fim_vigencia&quot;);&#xd;
	var dataFimVigencia = data_fim_vigencia.substring(6, 10) + &quot;-&quot; + data_fim_vigencia.substring(3, 5) + &quot;-&quot;+ data_fim_vigencia.substring(0, 2);&#xd;
	&#xd;
	&#xd;
	&#xd;
	xml += createNode(&quot;TCNTCOMPL&quot;);&#xd;
&#xd;
	xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
	xml += setNode(&quot;IDCNT&quot;, &quot;-1&quot;);&#xd;
	xml += setNode(&quot;TIPOCONSISTENCIA&quot;, &quot;1&quot;);&#xd;
	xml += setNode(&quot;IDMOVORIGEMCNT&quot;, hAPI.getCardValue(&quot;txt_numsol&quot;));&#xd;
	xml += setNode(&quot;STATUSCONT&quot;, &quot;01.023&quot;);&#xd;
&#xd;
	xml += setNode(&quot;ADITIVOPRAZO&quot;, &quot;0&quot;);&#xd;
	xml += setNode(&quot;ADITIVOPRECO&quot;, &quot;0&quot;);	&#xd;
		&#xd;
	if (hAPI.getCardValue(&quot;chapaDiretor&quot;) == &quot;00000002&quot;)&#xd;
		xml += setNode(&quot;DIREX&quot;, &quot;SUP&quot;);&#xd;
	else if (hAPI.getCardValue(&quot;chapaDiretor&quot;) == &quot;00000033&quot;)&#xd;
		xml += setNode(&quot;DIREX&quot;, &quot;DT2&quot;);&#xd;
	else if (hAPI.getCardValue(&quot;chapaDiretor&quot;) == &quot;00000538&quot;)	&#xd;
		xml += setNode(&quot;DIREX&quot;, &quot;DT3&quot;);&#xd;
	&#xd;
	xml += setNode(&quot;MODALIDADE&quot;, &quot;008&quot;);&#xd;
	xml += setNode(&quot;ROTINEIRA&quot;, &quot;0&quot;);&#xd;
	xml += setNode(&quot;CESSAO&quot;, &quot;0&quot;);&#xd;
	&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;aprovasebraetec&quot;) != &quot;&quot;)	&#xd;
	{&#xd;
		xml += setNode(&quot;SEBRAETEC&quot;, &quot;01&quot;);&#xd;
		xml += setNode(&quot;MODALIDADESEBRAETEC&quot;, &quot;02&quot;);&#xd;
	}&#xd;
	else&#xd;
	{&#xd;
		xml += setNode(&quot;SEBRAETEC&quot;, &quot;02&quot;);&#xd;
	}&#xd;
		&#xd;
	xml += setNode(&quot;DATAINICVIGENCIA&quot;, dataInicio);&#xd;
    xml += setNode(&quot;DATATERMVIGENCIA&quot;, dataFimVigencia);&#xd;
	&#xd;
	xml += setNode(&quot;DIRETORIA&quot;, &quot;&quot;);&#xd;
	//xml += setNode(&quot;NUMPROCESSO&quot;, &quot;&quot;);&#xd;
	xml += setNode(&quot;USAPRECOMP&quot;, &quot;1&quot;);&#xd;
	xml += setNode(&quot;TIPORATEIO&quot;, &quot;1&quot;);	&#xd;
	xml += setNode(&quot;VLRORIGINAL&quot;, valorTotal);&#xd;
	&#xd;
&#xd;
    //********************************************************&#xd;
	//campos do TCU&#xd;
	//********************************************************&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_ano_edi&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;ANOEDITALTCU&quot;, hAPI.getCardValue(&quot;txt_tcu_ano_edi&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_cat_obj&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;CATOBJETOTCU&quot;, hAPI.getCardValue(&quot;txt_tcu_cat_obj&quot;));	&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_cri_jul&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;CRITERIOTCU&quot;, hAPI.getCardValue(&quot;txt_tcu_cri_jul&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_cri_jul&quot;) != &quot;&quot;)&#xd;
	{&#xd;
		var txt_tcu_dt_edital = hAPI.getCardValue(&quot;txt_tcu_dt_edital&quot;);&#xd;
		var txt_tcu_dt_edital = txt_tcu_dt_edital.substring(6, 10) + &quot;-&quot; + txt_tcu_dt_edital.substring(3, 5) + &quot;-&quot;+ txt_tcu_dt_edital.substring(0, 2);&#xd;
		&#xd;
		xml += setNode(&quot;DATAEDITALTCU&quot;, txt_tcu_dt_edital);	&#xd;
	}&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_dt_homol&quot;) != &quot;&quot;)&#xd;
	{&#xd;
		var txt_tcu_dt_homol = hAPI.getCardValue(&quot;txt_tcu_dt_homol&quot;);&#xd;
		var txt_tcu_dt_homol = txt_tcu_dt_homol.substring(6, 10) + &quot;-&quot; + txt_tcu_dt_homol.substring(3, 5) + &quot;-&quot;+ txt_tcu_dt_homol.substring(0, 2);&#xd;
		&#xd;
		xml += setNode(&quot;DATAHOMOLOGTCU&quot;, txt_tcu_dt_homol);	&#xd;
	}&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_fas_obr&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;FASEOBRATCU&quot;, hAPI.getCardValue(&quot;txt_tcu_fas_obr&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_gra_obr&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;GRATOBRATCU&quot;, hAPI.getCardValue(&quot;txt_tcu_gra_obr&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_nat_obj&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;NATOBJETOTCU&quot;, hAPI.getCardValue(&quot;txt_tcu_nat_obj&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_nro_edital&quot;) != &quot;&quot;)&#xd;
		xml += setNode(&quot;NUMPROCESSO&quot;, hAPI.getCardValue(&quot;txt_tcu_nro_edital&quot;));&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_valor_ref_obra&quot;) != &quot;&quot;)&#xd;
	{&#xd;
		var txt_tcu_valor_ref_obra = (hAPI.getCardValue(&quot;txt_tcu_valor_ref_obra&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
		xml += setNode(&quot;VLRREFOBRGA&quot;, txt_tcu_valor_ref_obra);	&#xd;
	}&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_perc_exec&quot;) != &quot;&quot;)&#xd;
	{&#xd;
		var txt_tcu_perc_exec = (hAPI.getCardValue(&quot;txt_tcu_perc_exec&quot;)).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
		xml += setNode(&quot;EXECFISICATCU&quot;, txt_tcu_perc_exec);	&#xd;
	}&#xd;
	&#xd;
	if (hAPI.getCardValue(&quot;txt_tcu_obs_tcu&quot;) != &quot;&quot;)&#xd;
	{&#xd;
		xml += setNode(&quot;obstcu&quot;, hAPI.getCardValue(&quot;txt_tcu_obs_tcu&quot;));	&#xd;
	}&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
    xml += createNode(&quot;/TCNTCOMPL&quot;);&#xd;
    &#xd;
    return xml;&#xd;
}&#xd;
&#xd;
&#xd;
function createTCNTHISTORICO(xml,codColigada)&#xd;
{&#xd;
	xml += createNode(&quot;TCNTHISTORICO&quot;);&#xd;
	xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
	xml += setNode(&quot;IDCNT&quot;, &quot;-1&quot;);&#xd;
	 &#xd;
	var objeto = &quot;&quot; + hAPI.getCardValue(&quot;txa_objetocontratacao&quot;).replace(&quot;&amp;&quot;,&quot;e&quot;);&#xd;
	    &#xd;
    xml += setNode(&quot;HISTORICOCURTO&quot;, objeto.substr(0,250));&#xd;
    xml += createNode(&quot;/TCNTHISTORICO&quot;);&#xd;
    &#xd;
    return xml;&#xd;
}&#xd;
&#xd;
&#xd;
function createTITMCNT(xml,codColigada)&#xd;
{&#xd;
	var txt_numsol = hAPI.getCardValue(&quot;txt_numsol&quot;);		&#xd;
	var indexFornecedor = 1;&#xd;
	var cnt = 0;&#xd;
	var dataIni = hAPI.getCardValue(&quot;periodoinicial&quot;);&#xd;
	var dataInicio = dataIni.substring(6, 10) + &quot;-&quot; + dataIni.substring(3, 5) + &quot;-&quot;+ dataIni.substring(0, 2);&#xd;
	//var dataFi = hAPI.getCardValue(&quot;periodofinal&quot;);&#xd;
	//var dataFim = dataFi.substring(6, 10) + &quot;-&quot; + dataFi.substring(3, 5) + &quot;-&quot;+ dataFi.substring(0, 2);&#xd;
&#xd;
	var data_fim_vigencia = hAPI.getCardValue(&quot;data_fim_vigencia&quot;);&#xd;
	var dataFimVigencia = data_fim_vigencia.substring(6, 10) + &quot;-&quot; + data_fim_vigencia.substring(3, 5) + &quot;-&quot;+ data_fim_vigencia.substring(0, 2);&#xd;
&#xd;
	var constraints = new Array();&#xd;
    //constraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;, true, true, ConstraintType.MUST));&#xd;
    constraints.push(DatasetFactory.createConstraint(&quot;txt_numsol&quot;, txt_numsol, txt_numsol, ConstraintType.MUST));&#xd;
    var dsItens = DatasetFactory.getDataset(&quot;ds_itens_medicao_SGF&quot;, null, constraints, null);&#xd;
&#xd;
    var idprd_TMP = &quot;&quot;; //variavel para controlar a não repetição dos itens&#xd;
    &#xd;
    if (dsItens != null)&#xd;
	{&#xd;
    	for (var i = 0; i &lt; dsItens.rowsCount; i++) &#xd;
    	{&#xd;
	    	 var idprd = dsItens.getValue(i, &quot;idprd&quot;);&#xd;
	    	 var codtb1fat = dsItens.getValue(i, &quot;codtb1fat&quot;);&#xd;
	    	 var CODTIP = dsItens.getValue(i, &quot;CODTIP&quot;);&#xd;
	    	 var vlquantidade = dsItens.getValue(i, &quot;vlquantidade&quot;).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	    	 var vlprd = dsItens.getValue(i, &quot;vlprd&quot;).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	    	 var vlsubtotal = dsItens.getValue(i, &quot;vlsubtotal&quot;).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
	&#xd;
	    	 if (idprd_TMP != idprd)&#xd;
	    	 {&#xd;
	    		 cnt = cnt + 1;&#xd;
&#xd;
	    		 xml += createNode(&quot;TITMCNT&quot;);&#xd;
				 xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
				 xml += setNode(&quot;IDCNT&quot;, &quot;-1&quot;);&#xd;
				 xml += setNode(&quot;NSEQITMCNT&quot;, cnt);&#xd;
				 xml += setNode(&quot;CODMOEREAJUSTE&quot;, &quot;R$&quot;);&#xd;
				 xml += setNode(&quot;TIPOMEDICAO&quot;, &quot;V&quot;);&#xd;
				 xml += setNode(&quot;CODSTACNT&quot;, &quot;001&quot;);&#xd;
				 xml += setNode(&quot;CODCPG&quot;, &quot;01&quot;);		&#xd;
				 xml += setNode(&quot;CODDEPARTAMENTO&quot;, hAPI.getCardValue(&quot;codUnidadeDemandante&quot;));&#xd;
				 xml += setNode(&quot;QUANTIDADE&quot;, vlquantidade);&#xd;
				 xml += setNode(&quot;PRECOFATURAMENTO&quot;, vlprd);&#xd;
				 xml += setNode(&quot;PRECO&quot;, vlprd);&#xd;
				 xml += setNode(&quot;VALORTOTAL&quot;, vlsubtotal);&#xd;
				 xml += setNode(&quot;IDPRD&quot;, idprd);&#xd;
				 xml += setNode(&quot;CODCFO&quot;, hAPI.getCardValue(&quot;txt_forcodcfo&quot;));  &#xd;
				 xml += setNode(&quot;CODCOLCFODEST&quot;, codColigada);  &#xd;
				 xml += setNode(&quot;TIPOPREVISAOMEDICAO&quot;, &quot;V&quot;);&#xd;
				 xml += setNode(&quot;CODCOLCFO&quot;, codColigada);&#xd;
				 xml += setNode(&quot;DATAINICIO&quot;, dataInicio);&#xd;
				 xml += setNode(&quot;DATAFIM&quot;, dataFimVigencia);&#xd;
				 xml += setNode(&quot;CODTMV&quot;, &quot;1.1.80&quot;);&#xd;
				 xml += setNode(&quot;CODMOEPRECOFATURAMENTO&quot;, &quot;R$&quot;);&#xd;
				 xml += setNode(&quot;EPERIODICO&quot;, &quot;2&quot;);&#xd;
				 xml += setNode(&quot;CODCFODEST&quot;, hAPI.getCardValue(&quot;txt_forcodcfo&quot;));  &#xd;
				 xml += setNode(&quot;CODTB1FAT&quot;, codtb1fat);&#xd;
				 xml += setNode(&quot;CODFILIALFAT&quot;, &quot;1&quot;);&#xd;
				 xml += setNode(&quot;TIPODESTINATARIO&quot;, &quot;C&quot;);&#xd;
				&#xd;
				 if (CODTIP != &quot;&quot;)&#xd;
					xml += setNode(&quot;CODTIP&quot;, CODTIP);&#xd;
				&#xd;
				 xml += setNode(&quot;NATUREZAIT&quot;, &quot;1&quot;);&#xd;
				&#xd;
				 xml += setNode(&quot;CODCOLTBORCAMENTO&quot;, codColigada);&#xd;
				 xml += setNode(&quot;CODTBORCAMENTO&quot;, &quot;001&quot;);&#xd;
				&#xd;
				 xml += createNode(&quot;/TITMCNT&quot;);&#xd;
				&#xd;
				&#xd;
				 idprd_TMP = idprd;&#xd;
			&#xd;
			}&#xd;
			&#xd;
    	}&#xd;
	}&#xd;
	&#xd;
	return xml;	&#xd;
        &#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
function createTITMCNTMEDICAO(xml,codColigada)&#xd;
{&#xd;
	&#xd;
	var txt_numsol = hAPI.getCardValue(&quot;txt_numsol&quot;);		&#xd;
	var cnt = 0;&#xd;
	var cntNeto = 0;&#xd;
	&#xd;
	var constraints = new Array();&#xd;
    constraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;, true, true, ConstraintType.MUST));&#xd;
    constraints.push(DatasetFactory.createConstraint(&quot;txt_numsol&quot;, txt_numsol, txt_numsol, ConstraintType.MUST));&#xd;
    var dsItens = DatasetFactory.getDataset(&quot;ds_itens_medicao_SGF&quot;, null, constraints, null);&#xd;
&#xd;
    var idprd_TMP = &quot;&quot;; //variavel para controlar a não repetição dos itens&#xd;
    &#xd;
    if (dsItens != null)&#xd;
	{&#xd;
	    for (var i = 0; i &lt; dsItens.rowsCount; i++) &#xd;
    	{&#xd;
	    	var idprd = dsItens.getValue(i, &quot;idprd&quot;);&#xd;
	    	var dt = dsItens.getValue(i, &quot;dtmedicao&quot;);&#xd;
	    	var data_medicao = dt.substring(6, 10) + &quot;-&quot; + dt.substring(3, 5) + &quot;-&quot;+ dt.substring(0, 2);&#xd;
			var vl_medicao = dsItens.getValue(i, &quot;vlmedicao&quot;).replace(&quot;.&quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;.&quot;);&#xd;
			&#xd;
			cntNeto = cntNeto + 1;&#xd;
			&#xd;
			if (idprd_TMP != idprd)&#xd;
			{&#xd;
				cnt = cnt + 1;&#xd;
			}&#xd;
			&#xd;
			xml += createNode(&quot;TITMCNTMEDICAO&quot;);&#xd;
			xml += setNode(&quot;CODCOLIGADA&quot;, codColigada);&#xd;
			xml += setNode(&quot;IDCNT&quot;, &quot;-1&quot;);&#xd;
			xml += setNode(&quot;NSEQITMCNT&quot;, cnt);&#xd;
			xml += setNode(&quot;NSEQMEDICAO&quot;, cntNeto);&#xd;
			xml += setNode(&quot;DATA&quot;, data_medicao);&#xd;
			xml += setNode(&quot;QUANTIDADE&quot;, &quot;1.00&quot;);&#xd;
			xml += setNode(&quot;VALOR&quot;, vl_medicao);&#xd;
			xml += setNode(&quot;VALORTOTAL&quot;, vl_medicao);&#xd;
			xml += setNode(&quot;STATUS&quot;, &quot;0&quot;);&#xd;
			&#xd;
			xml += createNode(&quot;/TITMCNTMEDICAO&quot;);&#xd;
			&#xd;
			idprd_TMP = idprd;&#xd;
    	}&#xd;
	}&#xd;
	&#xd;
	return xml;	&#xd;
        &#xd;
}&#xd;
&#xd;
&#xd;
function setNode(node, valor)&#xd;
{&#xd;
	var line = createNode(node) + valor + createNode(&quot;/&quot; + node);&#xd;
	return line;&#xd;
}&#xd;
&#xd;
function createNode(node)&#xd;
{&#xd;
	return &quot;&lt;&quot; + node + &quot;&gt;&quot;;&#xd;
}&#xd;
&#xd;
function buscarData()&#xd;
{&#xd;
	return new Date();&#xd;
}&#xd;
&#xd;
function buscarDiaAtual()&#xd;
{&#xd;
	return buscarData().getDate().toString();&#xd;
}&#xd;
&#xd;
function buscarMesAtual()&#xd;
{&#xd;
	return (buscarData().getMonth()+1).toString();&#xd;
}&#xd;
&#xd;
function buscarAnoAtual()&#xd;
{&#xd;
	return buscarData().getFullYear().toString();&#xd;
}&#xd;
&#xd;
function buscarDataAtualSistema()&#xd;
{&#xd;
	return formatarData(buscarDiaAtual(), buscarMesAtual(), buscarAnoAtual());&#xd;
	//return formatarData(22, 12, 2017);&#xd;
}&#xd;
&#xd;
function formatarData(dia, mes, ano)&#xd;
{&#xd;
	if(dia.length == 1)&#xd;
		dia = 0+dia;	&#xd;
	if(mes.length == 1)&#xd;
		mes = 0+mes;	&#xd;
	return dia+&quot;/&quot;+mes+&quot;/&quot;+ano;&#xd;
}&#xd;
&#xd;
function stringToDate(dateString)&#xd;
{&#xd;
	var today = new java.util.Date();&#xd;
	var format = new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#xd;
	var date = format.parse(dateString);  &#xd;
	format = new java.text.SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xd;
	var data = format.format(date);&#xd;
	&#xd;
	return data;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask154</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask154(attempt, message) {
    
    
    
    var token = {
            Login: &quot;&quot;,
            Senha: &quot;&quot;,
            UF: &quot;&quot;
    }
    
    // token_amei
    /*{
        &quot;Success&quot;: true,
        &quot;Message&quot;: &quot;Autenticação realizada com sucesso!&quot;,
        &quot;Data&quot;: {
            &quot;Access_token&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJmY2JZUjNyMm5TNW9WdUVVMzhzZi1PbzRtWExoakJoNmJydDd4a1l2X01NIn0.eyJleHAiOjE2NTQ4MDEzNTAsImlhdCI6MTY1NDc5OTU1MCwianRpIjoiN2FlY2VmYmQtMjZiZi00ZjNhLTkwMjctMjkyZGI0M2EzYjM3IiwiaXNzIjoiaHR0cHM6Ly9hbWVpLWludGVybm8uc2VicmFlLmNvbS5ici9hdXRoL3JlYWxtcy9pbnRlcm5vIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjAyMDJlMzY2LTMzMTUtNDlhYS05OTRjLTNlNTRjYzU3MjE5MiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFzc2luYXR1cmEtZGlnaXRhbCIsInNlc3Npb25fc3RhdGUiOiIwNTU2OWJkNi1mNTNkLTQyNTMtYTJmNy1lYjlkYjU1YWQ4N2MiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vc2dvbGl0ZS5zZWJyYWUuY29tLmJyIiwiaHR0cHM6Ly9hc3NpbmF0dXJhZGlnaXRhbC5zZWJyYWUuY29tLmJyIl0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGNwZiBpbmZvcm1hY29lcy1jb3Jwb3J0YXRpdmFzIGVtYWlsIHJvbGVzIGVtcHJlc2FzIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImNwZiI6IjAxMDc1Mzk2MTY2IiwibmFtZSI6IlNpbHZhaXIgRmVybmFuZGVzIEZyYXrDo28iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzaWx2YWlyLmZyYXphb0BtdC5zZWJyYWUuY29tLmJyIiwiZ2l2ZW5fbmFtZSI6IlNpbHZhaXIiLCJmYW1pbHlfbmFtZSI6IkZlcm5hbmRlcyBGcmF6w6NvIiwiZW1haWwiOiJzaWx2YWlyLmZyYXphb0BtdC5zZWJyYWUuY29tLmJyIn0.b0Ll0zrs9fGnx9vG9Rmew78x8Uo0wBEU1XHkisydvJUsjGV5WIS3p2jFnFg2mW_7-O4nnqJDJkpCAJN-ZZyjs-akNcaYMpbcWdJtBrJwh9b_RkbuZOqT_z4eN5JGqf3zdUA7xcIZWO9xhQ4OSbFQ-X4mQfOyDosvUUm-A4eo8MpxvLlCDIB1sbFL5HxjDgXlGIsl-pda_kQ_raK-HY6CEoB43wgm3P4xLbPdlqMD2Imvr5NHNGfs5VPhyc-vpqRQJADEqpsI84GwTJ3FkDhnuT11aq6SRsIAtISdzW5tdMHLHR342JbQ9GnA6brJFodTxMIA74ief0WwVi6NkBHJ8g&quot;,
            &quot;Token_type&quot;: &quot;Bearer&quot;,
            &quot;Expires_In&quot;: 1800,
            &quot;Refresh_token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJkMjZiODdkYy0xZGZiLTRiM2EtOWIzZi0zYjRhMzA2ZjMxMDUifQ.eyJleHAiOjE2NTU2NjM1NTAsImlhdCI6MTY1NDc5OTU1MCwianRpIjoiMzg5YzAzODQtMDAyYS00YjUzLTgzYzMtMjA4MTJjYzdjODIyIiwiaXNzIjoiaHR0cHM6Ly9hbWVpLWludGVybm8uc2VicmFlLmNvbS5ici9hdXRoL3JlYWxtcy9pbnRlcm5vIiwiYXVkIjoiaHR0cHM6Ly9hbWVpLWludGVybm8uc2VicmFlLmNvbS5ici9hdXRoL3JlYWxtcy9pbnRlcm5vIiwic3ViIjoiMDIwMmUzNjYtMzMxNS00OWFhLTk5NGMtM2U1NGNjNTcyMTkyIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImFzc2luYXR1cmEtZGlnaXRhbCIsInNlc3Npb25fc3RhdGUiOiIwNTU2OWJkNi1mNTNkLTQyNTMtYTJmNy1lYjlkYjU1YWQ4N2MiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGNwZiBpbmZvcm1hY29lcy1jb3Jwb3J0YXRpdmFzIGVtYWlsIHJvbGVzIGVtcHJlc2FzIn0.m1c9ysyAOA355rvOXQRmeeBaFUFP_mif8pMX8q63sx8&quot;,
            &quot;Refresh_Expires_In&quot;: &quot;864000&quot;,
            &quot;Session_State&quot;: &quot;05569bd6-f53d-4253-a2f7-eb9db55ad87c&quot;,
            &quot;IsSuccessful&quot;: false,
            &quot;StatusCode&quot;: null,
            &quot;StatusDescription&quot;: null,
            &quot;Erro&quot;: {
                &quot;Message&quot;: null,
                &quot;ExceptionMessage&quot;: null,
                &quot;ExceptionType&quot;: null,
                &quot;StackTrace&quot;: null,
                &quot;Error&quot;: null,
                &quot;Error_Description&quot;: null
            }
        }
    }*/
    
    
    
    // verificar se há um consultor selecionado
    
    // caso não haja, buscar um consultor através de método do SGF
    
    // enviar dados para SGF

    // analisar se retorno de integração está enviando para o grupo, caso não esteja, providenciar o envio ou até criar um template
    
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask297</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask297(attempt, message) {

    try {
    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);

        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@ Aprovar Contratação @@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);

        var clientService = fluigAPI.getAuthorizeClientService();
        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
        
        if(dsToken.values.length &gt; 0)
        {
            
            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
            {
                var token = dsToken.getValue(0, &apos;token&apos;);
                var idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
                var idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
            } 

            var DataParecer = dataEnvio();
            var dadosAprovar = {
                CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
                DataParecer : DataParecer
            }  

            log.info(&quot;@@@@ CodContratacao: &quot; + hAPI.getCardValue(&quot;codContratacao&quot;));
            log.info(&quot;@@@@ DataParecer: &quot; + DataParecer);  

            var dataAprovar = {
                    companyId: String(getValue(&apos;WKCompany&apos;)),               
                    serviceCode: &apos;integracaoSGF&apos;,
                    endpoint: &apos;/api/Contratacao/AprovarContratacao&apos;,            
                    method: &apos;post&apos;,
                    timeoutService: &apos;100&apos;,          
                    options: {
                        encoding : &apos;UTF-8&apos;,
                        mediaType: &apos;application/json&apos;,
                        useSSL : true
                    },
                    params : dadosAprovar,
                    headers: {
                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
                        &apos;TokenSGF&apos; : String(token)
                    }            
            }

            //log.info(&quot;@@@@ JSON.stringify dataAprovar -&gt; &quot; + JSON.stringify(dataAprovar));
            var vo = clientService.invoke(JSONUtil.toJSON(dataAprovar));
            var result = JSON.parse(vo.getResult());       

            if(vo.getResult()== null || vo.getResult().isEmpty()){
                throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
            } else if (vo.getHttpStatusResult() &lt; 300){          
                
                if(result.Success == false){
                    var statusLog = &quot;&quot;;
                    if(result.Message != undefined){
                        statusLog += result.Data+&quot;\n&quot;;                      
                    } else {                        
                        for(var i = 0; i &lt; result.Data.length; i++){
                            statusLog += result.Data[i]+&quot;\n&quot;;
                        }
                    }
                    
                } else if(result.Success == true){
                    
                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
                    log.info(&quot;@@@@@@@@@@@@@@@@@@ INTEGRAÇÃO APROVAR CONTRATAÇÃO @@@@@@@@@@&quot;);
                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);

                    log.info(&quot;@@@@ DATA CREDENCIADO -&gt; &quot; + result.Data);
                }                
                                            
            } else {
                var statusLog = &quot;&quot;;
                if(result.Message != undefined){
                    statusLog += result.Message+&quot;\n&quot;
                } else {                        
                    for(var i = 0; i &lt; result.Data.length; i++){
                        statusLog += result.Data[i]+&quot;\n&quot;;
                    }
                }                
                
                throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
            } 
        }    
    
    } catch(error) {       
        throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
}


function dataEnvio() {
	var dataEnvio = new Date();
	var mes = dataEnvio.getMonth() + 1;
    var ano = dataEnvio.getFullYear();
    var dia = dataEnvio.getDate();
    ano = ano.toString();
	mes = mes.toString();
	dia = dia.toString();
	var hora = dataEnvio.getHours();
	hora = hora.toString();
	var minutos = dataEnvio.getMinutes();
	minutos = minutos.toString();
	var segundos = dataEnvio.getSeconds();
	segundos = segundos.toString();

	dataEnvio = ano+&apos;-&apos;+mes+&apos;-&apos;+dia+&apos; &apos;+hora+&apos;:&apos;+minutos+&apos;:&apos;+segundos;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ dataEnvio &quot;+dataEnvio);
	return dataEnvio;
}
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask171</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask171(attempt, message) {&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask281</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask281(attempt, message) {

    try {
    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);

        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@ Credenciado Contratação @@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
        log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);

        var clientService = fluigAPI.getAuthorizeClientService();
        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
        
        if(dsToken.values.length &gt; 0)
        {
            
            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
            {
                var token = dsToken.getValue(0, &apos;token&apos;);
                var idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
                var idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
            } 

            var IdCredenciadoPFMembros = [parseInt(hAPI.getCardValue(&quot;IdCredenciadoPFMembros&quot;))];
            var dataResposta = DataResposta();
            var dataEnvio = DataEnvio();
            var dadosCredenciado = {
                IdContratacao: &quot;&quot;,
                CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
                IdCredenciadoPJ : hAPI.getCardValue(&quot;IdCredenciadoPJ&quot;),
                IdCredenciadoPF : hAPI.getCardValue(&quot;IdCredenciadoPF&quot;),
                IdCredenciadoPFSubtituto : hAPI.getCardValue(&quot;IdCredenciadoPFSubtituto&quot;),
                IdCredenciadoPFMembros : IdCredenciadoPFMembros,
                DataEnvio : dataEnvio,
                DataResposta : dataResposta
            }  
            
            log.info(&quot;@@@@ IdContratacao: &quot; + &quot;&quot;);
            log.info(&quot;@@@@ codContratacao: &quot; + hAPI.getCardValue(&quot;codContratacao&quot;));
            log.info(&quot;@@@@ IdCredenciadoPJ: &quot; + parseInt(hAPI.getCardValue(&quot;IdCredenciadoPJ&quot;)));
            log.info(&quot;@@@@ IdCredenciadoPF: &quot; + IdCredenciadoPFMembros);
            log.info(&quot;@@@@ IdCredenciadoPFSubtituto: &quot; + parseInt(hAPI.getCardValue(&quot;IdCredenciadoPFSubtituto&quot;)));
            log.info(&quot;@@@@ IdCredenciadoPFMembros: &quot; + IdCredenciadoPFMembros);
            log.info(&quot;@@@@ DataEnvio: &quot; + dataEnvio);  
            log.info(&quot;@@@@ DataResposta: &quot; + dataResposta);  

            log.info(&quot;@@@@ dadosCredenciado-&gt; &quot; + dadosCredenciado);

            var dataCredenciado = {
                    companyId: String(getValue(&apos;WKCompany&apos;)),               
                    serviceCode: &apos;integracaoSGF&apos;,
                    endpoint: &apos;/api/Contratacao/EscolherCredenciadoContratacao&apos;,            
                    method: &apos;post&apos;,
                    timeoutService: &apos;100&apos;,          
                    options: {
                        encoding : &apos;UTF-8&apos;,
                        mediaType: &apos;application/json&apos;,
                        useSSL : true
                    },
                    params : dadosCredenciado,
                    headers: {
                        &apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
                        &apos;TokenSGF&apos; : String(token)
                    }            
            }

            //log.info(&quot;@@@@ JSON.stringify dataCREDENCIADO -&gt; &quot; + JSON.stringify(dataCredenciado));
            var vo = clientService.invoke(JSONUtil.toJSON(dataCredenciado));  
            var result = JSON.parse(vo.getResult());     
            log.info(&quot;@@@@ dataCredenciado result-&gt; &quot; + result);

            if(vo.getResult()== null || vo.getResult().isEmpty()){
                throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
            } else if (vo.getHttpStatusResult() &lt; 300){          
                
                if(result.Success == false){
                    var statusLog = &quot;&quot;;
                    if(result.Message != undefined){
                        statusLog += result.Data+&quot;\n&quot;;                      
                    } else {                        
                        for(var i = 0; i &lt; result.Data.length; i++){
                            statusLog += result.Data[i]+&quot;\n&quot;;
                        }
                    }
                    
                } else if(result.Success == true){
                    
                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
                    log.info(&quot;@@@@@@@@@@@@@@@@@@ INTEGRAÇÃO CREDENCIADO INCLUIDO @@@@@@@@@@@@@@@@@@@@&quot;);
                    log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);

                    log.info(&quot;@@@@ DATA CREDENCIADO -&gt; &quot; + result.Data);
                }                
                                            
            } else {
                var statusLog = &quot;&quot;;
                if(result.Message != undefined){
                    statusLog += result.Message+&quot;\n&quot;
                } else {                        
                    for(var i = 0; i &lt; result.Data.length; i++){
                        statusLog += result.Data[i]+&quot;\n&quot;;
                    }
                }                
                
                throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
            } 
        }    
    
    } catch(error) {       
        throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
}


function DataEnvio() {
	var dataEnvio = new Date();
	var mes = dataEnvio.getMonth() + 1;
    var ano = dataEnvio.getFullYear();
    var dia = dataEnvio.getDate();
    ano = ano.toString();
	mes = mes.toString();
	dia = dia.toString();
	var hora = dataEnvio.getHours();
	hora = hora.toString();
	var minutos = dataEnvio.getMinutes();
	minutos = minutos.toString();
	var segundos = dataEnvio.getSeconds();
	segundos = segundos.toString();

	dataEnvio = ano+&apos;-&apos;+mes+&apos;-&apos;+dia+&apos; &apos;+hora+&apos;:&apos;+minutos+&apos;:&apos;+segundos;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ dataEnvio &quot;+dataEnvio);
	return dataEnvio;
}

function DataResposta() {
    
    var dataResposta = new Date();
	var mes = dataResposta.getMonth() + 1;
    var ano = dataResposta.getFullYear();
    var dia = dataResposta.getDate();
    ano = ano.toString();
	mes = mes.toString();
	dia = dia.toString();
	var hora = dataResposta.getHours() + 1;
	hora = hora.toString();
	var minutos = dataResposta.getMinutes();
	minutos = minutos.toString();
	var segundos = dataResposta.getSeconds();
	segundos = segundos.toString();

	dataResposta = ano+&apos;-&apos;+mes+&apos;-&apos;+dia+&apos; &apos;+hora+&apos;:&apos;+minutos+&apos;:&apos;+segundos;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ dataResposta &quot;+dataResposta);
	return dataResposta;

}    </eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask_envia_aprov</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask239(attempt, message) {
	        
    try {
	    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
    	if ((solicitacaoXperts == &quot;1&quot; &amp;&amp; hAPI.getCardValue(&quot;cnpjFornecedor&quot;) != &quot;&quot;) ||
    			(solicitacaoXperts == &quot;&quot;))
    	{
    		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@ Andamento na integração SGF @@@@@@@@@@@@@@@@@@@@@@@&quot;);
            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
            
            var idPerfilAprovador = 0;
            var idUsuarioAprovador = 0;
            var token = &quot;&quot;;
            
	        var clientService = fluigAPI.getAuthorizeClientService();
	        var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
	        
	        if(dsToken.values.length &gt; 0)
	        {
	            
	            if(dsToken.getValue(0, &apos;resultado&apos;) == true)
	            {
	                token = dsToken.getValue(0, &apos;token&apos;);
	                idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
	                idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
	            } 
	            
	            
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@ envio para aprovação @@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
	            
	            if (hAPI.getCardValue(&quot;codContratacao&quot;) != &quot;&quot;)
		        {
	            	var dataAtual = new Date();
	    		    var tmpData = dataAtual.getDate()+&quot;/&quot;+parseInt(dataAtual.getMonth()+1)+&quot;/&quot;+dataAtual.getFullYear();
	    		    tmpData = formataData(tmpData);
	    		    
	    		    var dataEnvioformatada = tmpData + &quot; 00:00:00&quot;;	
	    		    
	            	var dadosEnvio = {
	            			CodContratacao : hAPI.getCardValue(&quot;codContratacao&quot;),
	            			DataEnvio : dataEnvioformatada,
	        				ListaAprovadores : [ {
	        					IdPerfilAprovador : idPerfilAprovador,                              
	        					IdUsuarioAprovador : idUsuarioAprovador,
	        					OrdemAprovacao : &quot;1&quot;
	                        } ]
	                    }    
	            	
	            	var dataEnvio = {
		                    companyId: String(getValue(&apos;WKCompany&apos;)),               
		                    serviceCode: &apos;integracaoSGF&apos;,
		                    endpoint: &apos;/api/Contratacao/EnviarContratacaoAprovacao&apos;,            
		                    method: &apos;post&apos;,
		                    timeoutService: &apos;100&apos;,          
		                    options: {
		                        encoding : &apos;UTF-8&apos;,
		                        mediaType: &apos;application/json&apos;,
		                        useSSL : true
		                    },
		                    params : dadosEnvio,
		                    headers: {
		                    	&apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
		                        &apos;TokenSGF&apos; : String(token)
		                            }            
		                }
	                
	            	//log.info(&quot;@@@@ JSON.stringify dataEnvio -&gt; &quot; + JSON.stringify(dataEnvio));
	            	
	                var vo = clientService.invoke(JSONUtil.toJSON(dataEnvio));
	                //var vo = clientService.invoke(JSON.stringify(dataEnvio));
	                var result = JSON.parse(vo.getResult());

	            	if(vo.getResult()== null || vo.getResult().isEmpty()){
	                   throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
	                } else if (vo.getHttpStatusResult() &lt; 300){          
	                    
	                    if(result.Success == false){
	                        var statusLog = &quot;&quot;;
	                        if(result.Message != undefined){
	                            statusLog += result.Data+&quot;\n&quot;;                      
	                        } else {                        
	                            for(var i = 0; i &lt; result.Data.length; i++){
	                                statusLog += result.Data[i]+&quot;\n&quot;;
	                            }
	                        }
	                        
	                    } 
	                                    
	                                               
	                } else {
	                    var statusLog = &quot;&quot;;
	                    if(result.Message != undefined){
	                    	statusLog += result.Message+&quot;\n&quot;
	                    } else {                        
	                        for(var i = 0; i &lt; result.Data.length; i++){
	                            statusLog += result.Data[i]+&quot;\n&quot;;
	                        }
	                    }                
	                    
	                    throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
	                } 
		        }
	            
	        }     
    	}
                            
    } catch(error) {       
       throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
    
}


function formataData(data){
    // converte do formato 00/00/0000 para 0000-00-00
    var str = &quot;&quot;;
    if(data != &quot;&quot;){
        str = data.split(&quot;/&quot;);                
    }
    return str[2]+&quot;-&quot;+str[1]+&quot;-&quot;+str[0];
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeStateEntry</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeStateEntry(sequenceId){&#xd;
&#xd;
	var usuario = getValue(&quot;WKUser&quot;);&#xd;
	var WKNumState = parseInt(getValue(&quot;WKNumState&quot;));&#xd;
	var NEXT_STATE = getValue(&quot;WKNextState&quot;);&#xd;
	var processo = getValue(&quot;WKNumProces&quot;);&#xd;
&#xd;
	log.info(&quot;@@@@@@@@@@@@ fluxo_financa - &quot;+ hAPI.getCardValue(&apos;fluxo_financa&apos;));&#xd;
	log.info(&quot;@@@@@@@@@@@@ cnpjFornecedor - &quot;+ hAPI.getCardValue(&apos;cnpjFornecedor&apos;));&#xd;
&#xd;
	log.info(&quot;@@@@@@@@@@@@ WKNumState - &quot;+ WKNumState);&#xd;
	log.info(&quot;@@@@@@@@@@@@ NEXT_STATE - &quot;+ NEXT_STATE);&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
	if (NEXT_STATE != null)&#xd;
	{		&#xd;
		var cl = DatasetFactory.createConstraint(&quot;colleaguePK.colleagueId&quot;,usuario,usuario,ConstraintType.MUST);&#xd;
		var consts = new Array(cl);    &#xd;
		var dsUsuario = DatasetFactory.getDataset(&quot;colleague&quot;, null, consts, null);&#xd;
&#xd;
		if (dsUsuario != null &amp;&amp; dsUsuario.values.length &gt; 0) &#xd;
		{&#xd;
			var nomeUsuario = dsUsuario.getValue(0, &quot;colleagueName&quot;); &#xd;
		}&#xd;
&#xd;
		//A cada mudança de atividade, é alterada a data da aprovação (para central de tarefas)&#xd;
		var dataAtual = new Date();&#xd;
&#xd;
		var dia = dataAtual.getDate();&#xd;
		if(dia &lt; 10){&#xd;
			dia = &quot;0&quot; + dia;&#xd;
		}&#xd;
		var mes = dataAtual.getMonth()+1;	&#xd;
		if(mes &lt; 10){		&#xd;
			mes = &quot;0&quot; + mes;&#xd;
		}&#xd;
		var ano = dataAtual.getFullYear();&#xd;
		if(ano &lt; 10){&#xd;
			ano = &quot;0&quot; + ano;&#xd;
		}&#xd;
		var hora = dataAtual.getHours();&#xd;
		if(hora &lt; 10){&#xd;
			hora = &quot;0&quot; + hora;&#xd;
		}&#xd;
		var minuto = dataAtual.getMinutes();&#xd;
		if(minuto &lt; 10){&#xd;
			minuto = &quot;0&quot; + minuto;&#xd;
		}&#xd;
		var segundo = dataAtual.getSeconds();&#xd;
		if(segundo &lt; 10){&#xd;
			segundo = &quot;0&quot; + segundo;&#xd;
		}&#xd;
		var dataAtualFinal = dia + &quot;/&quot; + mes + &quot;/&quot; + ano + &quot; - &quot; + hora +&quot;:&quot;+minuto+&quot;:&quot;+segundo;&#xd;
&#xd;
		hAPI.setCardValue(&quot;dataHoraUltimaAprovacao&quot;,dataAtualFinal);&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
		//gera historico automatico para fiscal e gestor do contrato (quando for aprovação automatica)&#xd;
		if	(WKNumState == 6 &amp;&amp; NEXT_STATE == 132 &amp;&amp; hAPI.getCardValue(&apos;matriculas_aprovacao_fiscal&apos;) == &quot;&quot;)&#xd;
		{&#xd;
			hAPI.setCardValue(&quot;aprovafiscal&quot;, &quot;sim&quot;);&#xd;
			hAPI.setCardValue(&quot;ck_termo_fiscal&quot;, &quot;on&quot;);&#xd;
&#xd;
&#xd;
			var str_historico = dataAtualFinal + &apos; - &apos; + hAPI.getCardValue(&apos;zoom_fiscal_contrato&apos;) + &quot; | Aprovado (automaticamente)&lt;br&gt;&quot; +&#xd;
			dataAtualFinal + &apos; - &apos; + hAPI.getCardValue(&apos;zoom_gestor_contrato&apos;) + &quot; | Aprovado (automaticamente)&quot;;&#xd;
&#xd;
			hAPI.setCardValue(&quot;txt_historico_Fiscal&quot;, str_historico + &apos;&lt;br&gt;&apos;);&#xd;
&#xd;
		}&#xd;
&#xd;
		//historico do fiscal e gestor do contrato&#xd;
		if	(WKNumState == 113 &amp;&amp; NEXT_STATE == 115)&#xd;
		{&#xd;
			var txt_aprvadm = hAPI.getCardValue(&apos;aprovafiscal&apos;);&#xd;
			var aprovado = &quot;&quot;;&#xd;
&#xd;
			if (txt_aprvadm == &quot;sim&quot;)&#xd;
				aprovado = &quot;Aprovado&quot;;&#xd;
			else if (txt_aprvadm == &quot;ajuste&quot;)&#xd;
				aprovado = &quot;Solicitou Ajuste&quot;;&#xd;
			else&#xd;
				aprovado = &quot;Não Aprovado&quot;;&#xd;
&#xd;
			var str_historico = hAPI.getCardValue(&apos;txt_historico_Fiscal&apos;);&#xd;
			hAPI.setCardValue(&quot;txt_historico_Fiscal&quot;, str_historico + dataAtualFinal + &apos; - &apos; + nomeUsuario + &apos; | &apos; + aprovado + &apos;&lt;br&gt;&apos;);&#xd;
		}&#xd;
&#xd;
&#xd;
		if	(NEXT_STATE == 193)&#xd;
		{&#xd;
			var constraints = new Array();&#xd;
			var emailDestino = &quot;taschek@yahoo.com&quot;;&#xd;
&#xd;
			//RETIRADO PARA TESTES EM PRODUÇÃO&#xd;
			//emailDestino = hAPI.getCardValue(&quot;emailFornecedor&quot;);&#xd;
			/*&#xd;
			if (emailDestino == &quot;&quot;)&#xd;
				throw &quot;ERRO -&gt; Não foi informado o e-mail do credenciado! [emailFornecedor]&quot;;&#xd;
&#xd;
			//monta e-mail e realiza o envio&#xd;
			constraints.push(DatasetFactory.createConstraint(&quot;emailDestino&quot;, emailDestino, emailDestino, ConstraintType.MUST));&#xd;
			var dsEnvio = DatasetFactory.getDataset(&quot;ds_SGF_envia_email_credenciado&quot;, null, constraints, null);&#xd;
&#xd;
			if (dsEnvio != null &amp;&amp; dsEnvio.rowsCount &gt; 0) {&#xd;
				for (var i = 0; i &lt; dsEnvio.rowsCount; i++) {&#xd;
&#xd;
					//if (dsEnvio.getValue(i, &quot;erro&quot;) == &quot;true&quot;)&#xd;
					//	throw &quot;ERRO -&gt; &quot; + dsEnvio.getValue(i, &quot;retorno&quot;);&#xd;
				}&#xd;
			}&#xd;
&#xd;
&#xd;
			//monta e-mail e realiza o envio (Cópia)&#xd;
			constraints.push(DatasetFactory.createConstraint(&quot;emailDestino&quot;, &quot;camille.campos@mt.sebrae.com.br&quot;, &quot;camille.campos@mt.sebrae.com.br&quot;, ConstraintType.MUST));&#xd;
			var dsEnvio = DatasetFactory.getDataset(&quot;ds_SGF_envia_email_credenciado&quot;, null, constraints, null);&#xd;
&#xd;
			if (dsEnvio != null &amp;&amp; dsEnvio.rowsCount &gt; 0) {&#xd;
				for (var i = 0; i &lt; dsEnvio.rowsCount; i++) {&#xd;
&#xd;
					//if (dsEnvio.getValue(i, &quot;erro&quot;) == &quot;true&quot;)&#xd;
					//	throw &quot;ERRO -&gt; &quot; + dsEnvio.getValue(i, &quot;retorno&quot;);&#xd;
				}&#xd;
			}&#xd;
&#xd;
&#xd;
			//monta e-mail e realiza o envio (Cópia)&#xd;
			constraints.push(DatasetFactory.createConstraint(&quot;emailDestino&quot;, &quot;luiz.souza@mt.sebrae.com.br&quot;, &quot;luiz.souza@mt.sebrae.com.br&quot;, ConstraintType.MUST));&#xd;
			var dsEnvio = DatasetFactory.getDataset(&quot;ds_SGF_envia_email_credenciado&quot;, null, constraints, null);&#xd;
&#xd;
			if (dsEnvio != null &amp;&amp; dsEnvio.rowsCount &gt; 0) {&#xd;
				for (var i = 0; i &lt; dsEnvio.rowsCount; i++) {&#xd;
&#xd;
					//if (dsEnvio.getValue(i, &quot;erro&quot;) == &quot;true&quot;)&#xd;
					//	throw &quot;ERRO -&gt; &quot; + dsEnvio.getValue(i, &quot;retorno&quot;);&#xd;
				}&#xd;
			}&#xd;
&#xd;
			 */&#xd;
		}&#xd;
&#xd;
&#xd;
		//Preenche o parecer&#xd;
		if(WKNumState == 322){&#xd;
&#xd;
			var parecer = hAPI.getCardValue(&quot;txa_parecerAssessorGerente&quot;);&#xd;
			if (parecer != &quot;&quot;) {&#xd;
&#xd;
				hAPI.setCardValue(&quot;txa_parecerAssessorGerenteDir&quot;, parecer);&#xd;
				hAPI.setCardValue(&quot;txt_parecerResponsavel&quot;, nomeUsuario);&#xd;
				hAPI.setCardValue(&quot;dt_parecerAssessorGerente&quot;, dataAtualFinal);&#xd;
&#xd;
				hAPI.setTaskComments(usuario, processo, 0, &quot;&lt;b&gt;Parecer: &quot; + parecer.toUpperCase() + &quot;&lt;/b&gt;.&quot;);&#xd;
&#xd;
&#xd;
			}&#xd;
&#xd;
		}&#xd;
&#xd;
		//Limpa o parecer anterior&#xd;
		if(NEXT_STATE == 322){&#xd;
			hAPI.setCardValue(&quot;txa_parecerAssessorGerente&quot;, &quot;&quot;);&#xd;
		}&#xd;
&#xd;
&#xd;
	}&#xd;
&#xd;
&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask157</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>
function servicetask157(attempt, message) {
        
    try {
    	var solicitacaoXperts = hAPI.getCardValue(&quot;solicitacaoXperts&quot;);
    	
		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
		log.info(&quot;@@@@@@@@@@@@@@@ Iniciando integração SGF @@@@@@@@@@@@@@@@@@@@@@@&quot;);
		log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
		
		var idPerfilAprovador = 0;
		var idUsuarioAprovador = 0;
		var token = &quot;&quot;;
		
		var CodContratacao = &quot;&quot;;
		var IdCredenciadoPJ = 0;
		var IdCredenciadoPF = 0;
		var IdCredenciadoPFSubtituto = 0;
		var IdCredenciadoPFMembros = 0;
		
		
		var clientService = fluigAPI.getAuthorizeClientService();
		var dsToken = DatasetFactory.getDataset(&quot;ds_SGF_busca_token&quot;, null, null, null);        
		
		if(dsToken.values.length &gt; 0)
		{
			
			if(dsToken.getValue(0, &apos;resultado&apos;) == true)
			{
				token = dsToken.getValue(0, &apos;token&apos;);
				idPerfilAprovador = dsToken.getValue(0, &apos;idPerfilAprovador&apos;);
				idUsuarioAprovador = dsToken.getValue(0, &apos;idUsuarioAprovador&apos;);
			} 
			
			var nome = DatasetFactory.createConstraint(&apos;nomeUsuario&apos;, hAPI.getCardValue(&quot;zoom_gestor_contrato&quot;), hAPI.getCardValue(&quot;zoom_gestor_contrato&quot;), ConstraintType.MUST);
			var tokenSGF = DatasetFactory.createConstraint(&apos;token&apos;, token, token, ConstraintType.MUST);
			var dsUsuario = DatasetFactory.getDataset(&apos;ds_SGF_consulta_usuario&apos;, null, [nome, tokenSGF], null);

			var idResponsavel = 0;
			var nomeResponsavel = &quot;&quot;;
			var codigoSecao = 0;
			
			
			if(dsUsuario.values.length &gt; 0)
			{
				idResponsavel = dsUsuario.getValue(0, &apos;idUsuario&apos;);
				nomeResponsavel = dsUsuario.getValue(0, &apos;nome&apos;);
				codigoSecao = dsUsuario.getValue(0, &apos;codigoSecao&apos;);
			}
			else
			{
				throw &quot;Erro na consulta de usuário&quot;;
			}
			
			
			var formaPrestacaoServ = 0; // FormaPrestacaoServ : 0=Presencial, 1=A Distância, 2=Híbrida
			var naturezaPrincipal = &quot;&quot;;
			
			if((hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;on&apos;) || (hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;instrutoria&apos;)){
				naturezaPrincipal = 2;
			} else if((hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) != &apos;on&apos;) || (hAPI.getCardValue(&quot;check_Consultoria&quot;) == &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) != &apos;instrutoria&apos;)){
				naturezaPrincipal = 0;
			} else if(hAPI.getCardValue(&quot;check_Consultoria&quot;) != &apos;on&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;on&apos; || (hAPI.getCardValue(&quot;check_Consultoria&quot;) != &apos;consultoria&apos; &amp;&amp; hAPI.getCardValue(&quot;check_instrutoria&quot;) == &apos;instrutoria&apos;)){
				naturezaPrincipal = 1;
			}
			
			
			// construção de um array de objetos do público alvo
			var publicoAlvo = [];
			
			if(hAPI.getCardValue(&quot;check_artesao&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(1)});
			if(hAPI.getCardValue(&quot;check_epp&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(2)});
			if(hAPI.getCardValue(&quot;check_me&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(3)});
			if(hAPI.getCardValue(&quot;check_mei&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(4)});
			if(hAPI.getCardValue(&quot;check_potencialempreendedor&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(5)});
			if(hAPI.getCardValue(&quot;check_produtorrural&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(6)});
			if(hAPI.getCardValue(&quot;check_outros&quot;) == &apos;on&apos;)
				publicoAlvo.push({IdPublicoAlvo : String(7)});
			
			
			var IdArea = 0;
			var IdSubarea = 0;
			
			if (hAPI.getCardValue(&quot;areaContratacao&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;areaContratacao&quot;) != null)
				IdArea = hAPI.getCardValue(&quot;areaContratacao&quot;);
			
			if (hAPI.getCardValue(&quot;subAreaContratacao&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;subAreaContratacao&quot;) != null)
				IdSubarea = hAPI.getCardValue(&quot;subAreaContratacao&quot;);
			

			var vlrHoraConsultoria = 0;
			var vlrHoraInstrutoria = 0;
			
			var cargaHorariaConsultoria = 0;
			var qtdeEntregasInstrutoria = 0;
			

			// montagem do array de objetos dos itens
			var indexesItens = hAPI.getChildrenIndexes(&quot;dadositens&quot;);
			var qtdItens = indexesItens.length;
			var contratacaoSubArea = [];

			for(var i = 1; i &lt;= qtdItens; i++){
				
				//var tipoFaturamento = hAPI.getCardValue(&quot;zoom_tipo_faturamento___&quot;+i);
				var tipoFaturamento = hAPI.getCardValue(&quot;txt_CODTIP___&quot;+i);
				
				log.info(&quot;@@@@@@@@@@ tipoFaturamento -&gt; &quot; + tipoFaturamento);
				
				if(tipoFaturamento == &quot;001&quot;){
					vlrHoraConsultoria = hAPI.getCardValue(&quot;txt_valor___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
					cargaHorariaConsultoria = hAPI.getCardValue(&quot;txt_quantidade___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
				} else if(tipoFaturamento == &quot;013&quot;){
					vlrHoraInstrutoria = hAPI.getCardValue(&quot;txt_valor___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
					qtdeEntregasInstrutoria = hAPI.getCardValue(&quot;txt_quantidade___&quot;+i).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;);
				}
				
				cargaHorariaConsultoria = parseInt(cargaHorariaConsultoria);
				qtdeEntregasInstrutoria = parseInt(qtdeEntregasInstrutoria);
				
				contratacaoSubArea.push({IdArea : &quot;&quot;, IdSubArea : &quot;&quot;});                
			}
			
			var somaEntregasConsultoria = 0;
			var somaEntregasInstrutoria = 0;

			// montagem do array de objetos das entregas
			var indexesEntregas = hAPI.getChildrenIndexes(&quot;dadositensmedicao&quot;);
			var qtdEntregas = indexesEntregas.length;                       
			var entregas = [];
			
			for(var e = 1; e &lt;= qtdEntregas; e++){
				var natureza = &quot;&quot;;
				for(var n = 1; n &lt;= qtdItens; n++){
					if(hAPI.getCardValue(&quot;neto_dadositensmedicao___&quot;+e) == hAPI.getCardValue(&quot;filho_dadositens___&quot;+n)){
						var tipoFaturamento = hAPI.getCardValue(&quot;txt_CODTIP___&quot;+n);
						
						log.info(&quot;@@@@@@@@@@ txt_CODTIP___ - &quot; + hAPI.getCardValue(&quot;txt_CODTIP___&quot;+n));
						
						if(tipoFaturamento == &quot;001&quot;){
							natureza = 0;
							somaEntregasConsultoria++;
						} else if(tipoFaturamento == &quot;013&quot;){
							natureza = 1;
							somaEntregasInstrutoria++;
						} else {
							natureza = 2;
						}
					}
				}
								
				entregas.push({
					Valor : String(&quot;&quot; + hAPI.getCardValue(&quot;vl_medicao_item___&quot;+e).replace(&quot;.&quot;,&quot;&quot;).replace(&quot;,&quot;,&quot;.&quot;)),
					Descricao : String(hAPI.getCardValue(&quot;ds_descricao_entrega_item___&quot;+e)),
					Natureza : String(natureza),
					Data : String(formataData(hAPI.getCardValue(&quot;dt_medicao_item___&quot;+e)))
				});
			}
			
			
			var indexesCCusto = hAPI.getChildrenIndexes(&quot;centroDeCusto&quot;);
			var qtdOrcamento = indexesCCusto.length;
			var orcamento = [];
			
			for(var o = 1; o &lt;= qtdOrcamento; o++){
				/*for(var n = 1; n &lt;= qtdItens; n++){
					if(hAPI.getCardValue(&quot;neto_dadositensmedicao___&quot;+o) == hAPI.getCardValue(&quot;filho_dadositens___&quot;+n)){
						var tipoFaturamento = parseInt(hAPI.getCardValue(&quot;txt_CODTIP___&quot;+o));
						
						log.info(&quot;@@@@@@@@@@ tipoFaturamento - &quot; + tipoFaturamento);
						
						if(tipoFaturamento == 1){
							natureza = 0;
						} else if(tipoFaturamento == 13){
							natureza = 1;
						} else {
							natureza = 2;
						}
					}
				}*/
				
				orcamento.push({
						Natureza : String(naturezaPrincipal),
						CodProjeto : String(hAPI.getCardValue(&quot;txt_codprojeto___&quot;+o)),
						CodAcao : String(hAPI.getCardValue(&quot;txt_codacao___&quot;+o)),
						CodUnidade : String(hAPI.getCardValue(&quot;txt_codrecurso___&quot;+o)),
						Percentual : String(hAPI.getCardValue(&quot;txt_percentual___&quot;+o))
					});
			}
				
			
			log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
			log.info(&quot;@@@@@@@@@@@@@@@ Iniciando contratação @@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
			log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
			
			var dadosContrato = {
							UFContratacao : String(hAPI.getCardValue(&quot;uf&quot;)),
							UFCredenciado : String(hAPI.getCardValue(&quot;uf&quot;)),
							FormaPrestacaoServ : String(formaPrestacaoServ),
							CodSecao : String(codigoSecao),
							Natureza : String(naturezaPrincipal),
							Responsavel : String(idResponsavel),
							ContratacaoSubArea : [ {
								IdArea : String(IdArea),                              
								IdSubarea : String(IdSubarea)
							} ],
							PublicoAlvo : publicoAlvo,
							Objeto : String(hAPI.getCardValue(&quot;txa_objetocontratacao&quot;)),
							JustificativaContratacao : String(hAPI.getCardValue(&quot;txa_justificativa&quot;)),
							DataInicio : String(formataData(hAPI.getCardValue(&quot;periodoinicial&quot;))),
							DataFim : String(formataData(hAPI.getCardValue(&quot;periodofinal&quot;))),
							Cep : String(hAPI.getCardValue(&quot;txt_cep&quot;)),
							ValorHoraConsultoria : parseFloat(vlrHoraConsultoria),
							CargaHorariaConsultoria : String(cargaHorariaConsultoria),
							QtdeEntregasConsultoria : String(somaEntregasConsultoria),
							DespesaViagemConsultoria : &quot;&quot;,
							DescricaoDespesasConsultoria : &quot;Conforme resolução vigente.&quot;,
							ValorHoraInstrutoria : parseFloat(vlrHoraInstrutoria),
							CargaHorariaInstrutoria : String(qtdeEntregasInstrutoria),
							QtdeEntregasInstrutoria : String(somaEntregasInstrutoria),
							DespesaViagemInstrutoria : &quot;&quot;,
							DescricaoDespesasInstrutoria : &quot;&quot;,
							Entregas : entregas,
							DadosOrcamentarios : orcamento,
							IdProduto : &quot;&quot;,
							OutroPublicoAlvo : String(hAPI.getCardValue(&quot;txa_outros&quot;)),
							JustificativaUFAlternativa : &quot;AUTOMÁTICO - CAMPO NÃO DEFINIDO EM FORMULÁRIO&quot;
						}    
			
			
			
			var dataContrato = {
					companyId: String(getValue(&apos;WKCompany&apos;)),               
					serviceCode: &apos;integracaoSGF&apos;,
					endpoint: &apos;/api/Contratacao/IncluirContratacaoRodizio&apos;,            
					method: &apos;post&apos;,
					timeoutService: &apos;100&apos;,          
					options: {
						encoding : &apos;UTF-8&apos;,
						mediaType: &apos;application/json&apos;,
						useSSL : true
					},
					params : dadosContrato,
					headers: {
						&apos;Content-Type&apos;: &apos;application/json;charset=UTF-8&apos;,
						&apos;TokenSGF&apos; : String(token)
							}            
				}
			
			log.info(&quot;@@@@ JSON.stringify dataContrato -&gt; &quot; + JSON.stringify(dataContrato));
			
			
			var vo = clientService.invoke(JSON.stringify(dataContrato));
			
			var result = JSON.parse(vo.getResult());                                    

			if(vo.getResult()== null || vo.getResult().isEmpty()){
				throw &quot;Houve um erro no retorno da integração com SGF. O restorno está vazio.&quot;;                          
			} else if (vo.getHttpStatusResult() &lt; 300){          
				
				if(result.Success == false){
					var statusLog = &quot;&quot;;
					if(result.Message != undefined){
						statusLog += result.Data+&quot;\n&quot;;                      
					} else {                        
						for(var i = 0; i &lt; result.Data.length; i++){
							statusLog += result.Data[i]+&quot;\n&quot;;
						}
					}
					
				} else if(result.Success == true){
					
					CodContratacao = result.Data[&quot;CodContratacao&quot;];
					
					hAPI.setCardValue(&quot;idContratacao&quot;, result.Data[&quot;IdContratacao&quot;]);
					hAPI.setCardValue(&quot;codContratacao&quot;, result.Data[&quot;CodContratacao&quot;]);
					hAPI.setCardValue(&quot;txt_cc&quot;, result.Data[&quot;CodContratacao&quot;]);
					
					log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
					log.info(&quot;@@@@@@@@@@@@@@@@@@ CONTRATACAO INCLUIDA @@@@@@@@@@@@@@@@@@@@&quot;);
					log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);
					log.info(&quot;@@@@ idContratacao -&gt; &quot; + result.Data[&quot;IdContratacao&quot;]);
					log.info(&quot;@@@@ codContratacao -&gt; &quot; + result.Data[&quot;CodContratacao&quot;]);
				}                
											
			} else {
				var statusLog = &quot;&quot;;
				if(result.Message != undefined){
					statusLog += result.Message+&quot;\n&quot;
				} else {                        
					for(var i = 0; i &lt; result.Data.length; i++){
						statusLog += result.Data[i]+&quot;\n&quot;;
					}
				}                
				
				throw &quot;Houve um erro na integração com SGF. (&quot; + result.Success + &quot;)\n\n&quot; + statusLog;                          
			}   
			
		}  
                            
    } catch(error) {       
       throw &quot;Não conseguimos comunicação com o SGF. &quot; + error;
    }
    
}


function formataData(data){
    // converte do formato 00/00/0000 para 0000-00-00
    var str = &quot;&quot;;
    if(data != &quot;&quot;){
        str = data.split(&quot;/&quot;);                
    }
    return str[2]+&quot;-&quot;+str[1]+&quot;-&quot;+str[0];
}

function dataEnvio() {
	var dataEnvio = new Date();
	var mes = dataEnvio.getMonth() + 1;ano = ano.toString()
	mes = mes.toString();
	var ano = dataEnvio.getFullYear();
	ano = ano.toString();
	var dia = dataEnvio.getDate();
	dia = dia.toString();
	var hora = dataEnvio.getHours();
	hora = hora.toString();
	var minutos = dataEnvio.getMinutes();
	minutos = minutos.toString();
	var segundos = dataEnvio.getSeconds();
	segundos = segundos.toString();

	dataEnvio = ano+&apos;-&apos;+mes+&apos;-&apos;+dia+&apos; &apos;+hora+&apos;:&apos;+minutos+&apos;:&apos;+segundos;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ dataEnvio &quot;+dataEnvio);
	return dataEnvio;
}
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask101</eventId>
        <processId>SGF</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask101(attempt, message) &#xd;
{&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@@@ Integração Geração de Contratos @@@@@@@@@@@@&quot;);&#xd;
	log.info(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xd;
	&#xd;
	//verifica configuração de casas decimais RM. Caso não estiver OK, cancela integração&#xd;
	var constraints = new Array();&#xd;
    var dsVerificacao = DatasetFactory.getDataset(&quot;ds_verificacao_casas_decimais_RM&quot;, null, constraints, null);&#xd;
&#xd;
    if (dsVerificacao != null)&#xd;
	{&#xd;
    	if (dsVerificacao.getValue(0, &quot;formato_correto&quot;) == &quot;false&quot;)&#xd;
    		throw &quot;Configuração de casas decimais com problema! Procure o administrador RM&quot;;&#xd;
	}&#xd;
    else&#xd;
	{&#xd;
    	throw &quot;Verificação de casas decimais RM inexisente!&quot;;&#xd;
	}&#xd;
    &#xd;
    &#xd;
    &#xd;
	var  result;&#xd;
	&#xd;
	try&#xd;
	{  &#xd;
	    var usuario = &quot;&quot;;&#xd;
	    var senha = &quot;&quot;;&#xd;
	    var codcoligada = &quot;&quot;;&#xd;
		var idCnt = hAPI.getCardValue(&quot;txtIdContratoRM&quot;);&#xd;
	    &#xd;
	    //busca usuário e senha para integração&#xd;
		var datasetBase64 = DatasetFactory.getDataset(&quot;ds_user_wsecm&quot;, null, null, null);&#xd;
		&#xd;
		if (datasetBase64 != null &amp;&amp; datasetBase64.values.length &gt; 0) &#xd;
		{&#xd;
			usuario = datasetBase64.getValue(0, &quot;usuario&quot;);&#xd;
			senha = datasetBase64.getValue(0, &quot;senha&quot;);&#xd;
			codcoligada = parseInt(datasetBase64.getValue(0, &quot;codcoligada&quot;));&#xd;
		}&#xd;
		&#xd;
		//declaração do serviço&#xd;
		var serviceName = &quot;TBC_RM&quot;;&#xd;
		var servicePath = &quot;com.totvs.WsDataServer&quot;;&#xd;
		var servico = ServiceManager.getServiceInstance(serviceName);&#xd;
		var instancia = servico.instantiate(servicePath);&#xd;
		var ws = instancia.getRMIwsDataServer();&#xd;
		var serviceHelper = servico.getBean();&#xd;
		var authService = null;&#xd;
		&#xd;
		if (idCnt == &quot;&quot;)&#xd;
		{&#xd;
			var xml = createXmlContrato(codcoligada);&#xd;
			authService = serviceHelper.getBasicAuthenticatedClient(ws, &quot;com.totvs.IwsDataServer&quot;, usuario, senha);	&#xd;
			&#xd;
			result = authService.saveRecord(&apos;CtrCntData&apos;, xml, &apos;codcoligada=&apos;+ codcoligada +&apos;;codusuario=&apos; + usuario);&#xd;
			&#xd;
			log.info(&quot;@@@@@@[XML] ----&gt; \n&quot; + xml);&#xd;
			&#xd;
			if(isError(result.toString()))&#xd;
			{&#xd;
				throw result + &quot;[XML] ----&gt; \n&quot; + xml;	    		&#xd;
			}&#xd;
			else&#xd;
			{&#xd;
				var nroContrato = hAPI.getCardValue(&quot;txtNroContrato&quot;);&#xd;
				&#xd;
				success = true;&#xd;
				log.info(&apos;@@@@@@@@@@ Successo Integração Contrato -&gt; &apos; + result.toString());&#xd;
				hAPI.setCardValue(&quot;txtIdContratoRM&quot;, result.toString().split(&quot;;&quot;)[1]);&#xd;
				idCnt = result.toString().split(&quot;;&quot;)[1];&#xd;
				hAPI.setCardValue(&quot;txtContratoRM&quot;, nroContrato);&#xd;
			}&#xd;
		}&#xd;
		&#xd;
	    //Integração de Centro de Custo e Medição&#xd;
		if (idCnt != &quot;&quot;)&#xd;
		{&#xd;
	    	integraCentroCusto(idCnt, codcoligada);&#xd;
	    	integraMedicao(idCnt, codcoligada);&#xd;
		}&#xd;
    }  &#xd;
    catch (e)   &#xd;
    {  &#xd;
        if (e == null)&#xd;
        	e = &quot;Erro desconhecido!&quot;;  &#xd;
        &#xd;
    	var mensagemErro = &quot;Ocorreu um erro ao salvar dados no RM: &quot; + e;  &#xd;
    	log.error(&quot;@@@@@@@@@@ erro: &quot;+mensagemErro);&#xd;
    	&#xd;
    	throw mensagemErro;&#xd;
        &#xd;
	}&#xd;
}&#xd;
/**&#xd;
 * Verifica se o retorno do RM eh erro de negocio.&#xd;
 * &#xd;
 * @param result: Retorno do RM.&#xd;
 * @returns boolean.&#xd;
 */&#xd;
function isError(result) {&#xd;
	return isNaN(result.substring(0,1));&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>287</height>
      <width>4584</width>
      <positionX>21</positionX>
      <positionY>35</positionY>
      <stateName>Gestor Demandante</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>177</height>
      <width>4580</width>
      <positionX>21</positionX>
      <positionY>310</positionY>
      <stateName>Gestão Fiscal</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>206</height>
      <width>4582</width>
      <positionX>21</positionX>
      <positionY>871</positionY>
      <stateName>Gestor SEBRAETEC</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>203</height>
      <width>4583</width>
      <positionX>20</positionX>
      <positionY>1414</positionY>
      <stateName>Diretoria Executiva</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>247</height>
      <width>4583</width>
      <positionX>20</positionX>
      <positionY>1884</positionY>
      <stateName>Central de Servico</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>5</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>147</height>
      <width>4583</width>
      <positionX>21</positionX>
      <positionY>486</positionY>
      <stateName>Coordenador</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>6</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>161</height>
      <width>4582</width>
      <positionX>21</positionX>
      <positionY>1072</positionY>
      <stateName>Gestão TIC</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>7</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>283</height>
      <width>4583</width>
      <positionX>20</positionX>
      <positionY>1611</positionY>
      <stateName>Gestor SGF</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>8</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>210</height>
      <width>4581</width>
      <positionX>21</positionX>
      <positionY>1210</positionY>
      <stateName>Assessor / Gerente Estadual</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>9</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>243</height>
      <width>4581</width>
      <positionX>21</positionX>
      <positionY>629</positionY>
      <stateName>Gerência</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <sequence>10</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>2230</positionX>
      <positionY>1600</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <componGrafSequence>179</componGrafSequence>
      </processComponGrafPK>
      <stateName>Executa a integração apenas se a solicitação vier do Xperts</stateName>
    </ProcessComponGraf>
  </list>
  <list>
    <ProcessLinkAssoc>
      <processLinkAssocPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>1</version>
        <linkSequence>180</linkSequence>
      </processLinkAssocPK>
      <initialStateSequence>179</initialStateSequence>
      <finalStateSequence>157</finalStateSequence>
    </ProcessLinkAssoc>
  </list>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>344</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>669</positionX>
      <positionY>824</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>137</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1192</positionX>
      <positionY>60</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>137</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>470</positionX>
      <positionY>60</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>250</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>884</positionX>
      <positionY>1050</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>250</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>452</positionX>
      <positionY>1050</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>62</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>898</positionX>
      <positionY>1516</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>74</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1424</positionX>
      <positionY>1826</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>206</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>3592</positionX>
      <positionY>2028</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>272</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>2192</positionX>
      <positionY>2090</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>272</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>2254</positionX>
      <positionY>2090</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>272</linkSequence>
        <bendSequence>3</bendSequence>
      </processLinkBendPK>
      <positionX>2556</positionX>
      <positionY>2090</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>272</linkSequence>
        <bendSequence>4</bendSequence>
      </processLinkBendPK>
      <positionX>3342</positionX>
      <positionY>2090</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>204</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1814</positionX>
      <positionY>1826</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>286</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>3132</positionX>
      <positionY>1890</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>295</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>2600</positionX>
      <positionY>1906</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>304</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>2860</positionX>
      <positionY>1896</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <version>432</version>
        <linkSequence>338</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1002</positionX>
      <positionY>1324</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>SGF</processId>
        <fieldId>unidadeDemandante</fieldId>
      </processFormFieldPK>
      <fieldDescription>unidadeDemandante</fieldDescription>
      <slotId>1</slotId>
    </ProcessFormField>
  </list>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SGF</processId>
      <version>1</version>
      <sequence>101</sequence>
      <attempts>0</attempts>
      <sucessFullMessage></sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SGF</processId>
      <version>1</version>
      <sequence>157</sequence>
      <attempts>0</attempts>
      <sucessFullMessage></sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SGF</processId>
      <version>1</version>
      <sequence>281</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SGF</processId>
      <version>1</version>
      <sequence>290</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SGF</processId>
      <version>1</version>
      <sequence>297</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list/>
  <list/>
  <list/>
  <list/>
</list>